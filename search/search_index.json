{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Exploring the Central Limit Theorem through simulations Motivation:\u00b6 The Central Limit Theorem (CLT) is a cornerstone of probability and statistics, stating that the sampling distribution of the sample mean approaches a normal distribution as the sample size increases, regardless of the population\u2019s original distribution. Simulations provide an intuitive and hands-on way to observe this phenomenon in action. Task:\u00b6 1 Simulating Sampling Distributions: Select several types of population distributions, such as: Uniform distribution. Exponential distribution. Binomial distribution. For each distribution, generate a large dataset representing the population. 2 Sampling and Visualization: Randomly sample data from the population and calculate the sample mean for different sample sizes (e.g., 5, 10, 30, 50). Repeat the process multiple times to create a sampling distribution of the sample mean. Plot histograms of the sample means for each sample size and observe the convergence to a normal distribution. 3 Parameter Exploration: Investigate how the shape of the original distribution and the sample size influence the rate of convergence to normality. Highlight the impact of the population\u2019s variance on the spread of the sampling distribution. 4 Practical Applications: Reflect on the importance of the CLT in real-world scenarios, such as: Estimating population parameters. Quality control in manufacturing. Predicting outcomes in financial models. 1. Theoretical Foundation Projectile motion is a classical physics problem that can be fully described using Newton\u2019s laws of motion and the kinematic equations. In this section, we will derive the governing equations, define key variables, and discuss the structural independence of horizontal and vertical components of the motion. 1.1 Governing Equations of Motion Assume a particle is projected from an initial height \\(h_0\\) with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) above the horizontal. We ignore air resistance for simplicity. We resolve the motion into two orthogonal components: Horizontal (x-axis) Vertical (y-axis) Using kinematics: Horizontal Motion: - Constant velocity motion (no horizontal acceleration) $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ Vertical Motion: - Accelerated motion due to gravity $$ y(t) = h_0 + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$ where: - \\(x(t)\\) and \\(y(t)\\) are positions as functions of time \\(t\\) - \\(g\\) is the acceleration due to gravity (typically \\(9.81 \\, \\text{m/s}^2\\) ) 1.2 Key Variables \\(\\theta\\) : Angle of projection (radians or degrees) \\(v_0\\) : Initial velocity (magnitude) \\(g\\) : Acceleration due to gravity ( \\(9.81 \\, \\text{m/s}^2\\) on Earth) \\(h_0\\) : Initial height from which the projectile is launched \\(t\\) : Time variable (s) \\(x(t), y(t)\\) : Horizontal and vertical displacements as functions of time 1.3 Independence of Motion Components According to Newton\u2019s Second Law, motion along perpendicular axes is independent : Horizontal motion is uniform (no acceleration). Vertical motion is uniformly accelerated (due to gravity). This allows the problem to be decoupled into two separate 1D problems. 1.4 Range as a Function of Angle The horizontal range \\(R\\) is the horizontal distance traveled when the projectile returns to the ground ( \\(y = 0\\) ). For a flat surface ( \\(h_0 = 0\\) ), set \\(y(t) = 0\\) : \\[ 0 = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] Solving for time of flight \\(T\\) (non-zero solution): \\[ T = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Substitute into horizontal displacement: \\[ R = x(T) = v_0 \\cos(\\theta) \\cdot T = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Thus, the range depends on: Square of initial speed \\(v_0\\) Sine of double the angle \\(\\sin(2\\theta)\\) Inversely on gravity \\(g\\) 1.5 Symmetry in Motion In the absence of air resistance and with \\(h_0 = 0\\) , projectile motion exhibits time-reversal symmetry : The trajectory is a parabola symmetric about the apex. The time to reach maximum height equals the time to descend from it. Mathematically: - The height at time \\(t\\) equals the height at time \\(T - t\\) - Maximum range occurs at \\(\\theta = 45^\\circ\\) since \\(\\sin(2\\theta)\\) is maximal when \\(2\\theta = 90^\\circ\\) 1.6 Simplifying Assumptions To isolate the core physics: No air resistance (ideal projectile) Constant gravitational acceleration Flat launch and landing surfaces Rigid-body approximation (treat the projectile as a point mass) These assumptions allow analytical solutions and illustrate core physical principles. For real-world modeling, corrections may be introduced. 2. Analytical Range Dependency In this section, we analyze the mathematical structure of the horizontal range of projectile motion as a function of various parameters: launch angle, initial velocity, gravitational acceleration, and launch height. We begin with the canonical case of a ground-level launch, then extend to arbitrary launch heights and perform sensitivity analysis. 2.1 Range Equation \u2014 Ground-Level Launch Assuming the projectile is launched from and lands on the same horizontal level ( \\(h_0 = 0\\) ), the time of flight \\(T\\) is derived from setting vertical displacement to zero: \\[ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 = 0 \\] Ignoring the trivial solution \\(t = 0\\) , the total time of flight is: \\[ T = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Substituting into the horizontal position: \\[ R = x(T) = v_0 \\cos(\\theta) \\cdot T \\] Therefore, the horizontal range is: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] 2.2 Extension to Non-Zero Launch Height Now consider the projectile launched from a height \\(h_0 > 0\\) . The vertical displacement is: \\[ y(t) = h_0 + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] Set \\(y(t) = 0\\) and solve the quadratic: \\[ 0 = h_0 + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] Using the quadratic formula: \\[ t = \\frac{v_0 \\sin(\\theta) + \\sqrt{(v_0 \\sin(\\theta))^2 + 2 g h_0}}{g} \\] Then, the range becomes: \\[ R = v_0 \\cos(\\theta) \\cdot \\left( \\frac{v_0 \\sin(\\theta) + \\sqrt{(v_0 \\sin(\\theta))^2 + 2 g h_0}}{g} \\right) \\] This formula accounts for the increased time aloft due to the launch height \\(h_0\\) . 2.3 Range vs. Angle \u2014 Maximum Range Angle In the ground-level case, since: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] The maximum value of \\(\\sin(2\\theta)\\) occurs when: \\[ 2\\theta = 90^\\circ \\Rightarrow \\theta = 45^\\circ \\] So the maximum range for a flat launch occurs at \\(\\theta = 45^\\circ\\) . For non-zero \\(h_0\\) , the optimal angle shifts slightly downward, and must be found numerically or via calculus optimization. 2.4 Sensitivity Analysis We now consider how the range \\(R\\) responds to changes in key parameters. \u27a4 Sensitivity to Angle ( \\(\\theta\\) ) In the ground-level case: \\[ R(\\theta) = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Highly nonlinear dependence due to sine function. Symmetry: \\(R(\\theta) = R(90^\\circ - \\theta)\\) . Range is sensitive near \\(\\theta = 45^\\circ\\) (small changes can cause noticeable deviation). \u27a4 Sensitivity to Initial Velocity ( \\(v_0\\) ) Since: \\[ R \\propto v_0^2 \\] Quadratic growth in range with velocity. Doubling \\(v_0\\) results in a fourfold increase in range (if angle and \\(g\\) remain fixed). \u27a4 Sensitivity to Gravity ( \\(g\\) ) Again from: \\[ R \\propto \\frac{1}{g} \\] Inversely proportional : Higher gravity leads to shorter range. E.g., on the Moon ( \\(g \\approx 1.63 \\, \\text{m/s}^2\\) ), projectiles travel farther than on Earth. \u27a4 Combined Dependencies Overall, the range is governed by: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\quad \\text{(for } h_0 = 0\\text{)} \\] And is nonlinear with respect to: - Angle \\(\\theta\\) (trigonometric dependency) - Velocity \\(v_0\\) (quadratic) - Gravity \\(g\\) (reciprocal) 2.5 Summary The classical range equation provides insight into how projectiles behave under ideal conditions. Extensions to non-zero heights introduce asymmetry and more complex dynamics. Sensitivity to initial conditions emphasizes the need for precision in real-world applications like sports or engineering. 3. Practical Applications While the idealized model of projectile motion is useful for conceptual understanding, its application in the real world requires adjustments for various non-ideal conditions. This section explores practical scenarios and the modifications needed to extend the basic equations of motion. 3.1 Real-World Scenarios Projectile motion underpins many fields in science, engineering, and everyday life. Examples include: Sports: Soccer, basketball, golf \u2014 predicting the arc of a kicked or thrown ball. Optimizing angle and speed for maximum distance or accuracy. Ballistics: Firearms and artillery \u2014 range, angle, and impact prediction. Military targeting systems rely on modified projectile models. Aerospace: Rocket launches, space re-entry paths. Orbital mechanics incorporates gravitational variation and drag. Engineering: Water jets in fountains. Debris trajectory analysis for structural safety. 3.2 Non-Ideal Conditions \u27a4 Air Resistance Air resistance (drag) introduces a velocity-dependent force, typically modeled as: \\[ \\vec{F}_d = -\\frac{1}{2} C_d \\rho A v^2 \\hat{v} \\] where: - \\(C_d\\) : Drag coefficient (depends on shape and surface) - \\(\\rho\\) : Air density - \\(A\\) : Cross-sectional area - \\(v\\) : Velocity magnitude - \\(\\hat{v}\\) : Unit vector in the direction of motion Effects: - Reduces horizontal range. - Breaks time symmetry. - Requires numerical methods to solve differential equations of motion. \u27a4 Wind Wind adds a constant or variable velocity component to the system: Headwind decreases effective horizontal velocity. Tailwind increases it. Crosswinds alter lateral displacement (especially important in ballistics). Wind forces are often modeled as: \\[ \\vec{F}_{\\text{wind}} = m \\vec{a}_{\\text{wind}} \\] Where \\(\\vec{a}_{\\text{wind}}\\) is an external acceleration due to wind influence. \u27a4 Launch from/onto a Slope For inclined surfaces, the coordinate axes must be rotated to align with the slope. Let the incline angle be \\(\\phi\\) . Adjust equations to project velocity components along and perpendicular to the slope: $$ v_{x'} = v_0 \\cos(\\theta - \\phi), \\quad v_{y'} = v_0 \\sin(\\theta - \\phi) $$ Gravity also decomposes accordingly: $$ g_{x'} = g \\sin(\\phi), \\quad g_{y'} = g \\cos(\\phi) $$ Result: - More complex motion. - Landing point must be calculated by solving in a rotated frame. 3.3 Modifications to the Basic Model To adapt the projectile model to these practical scenarios, several modifications are typically introduced: Condition Modification Required Solution Method Air Resistance Add quadratic or linear drag terms to force Numerical (e.g., Runge-Kutta) Wind Modify net velocity and external forces Analytic + numeric Uneven Terrain Adjust coordinate system and boundaries Trigonometric projection Variable Gravity Use \\(g(h)\\) decreasing with altitude Calculus-based modeling Coriolis Effect Add Earth-rotation corrections Used in long-range targeting 3.4 Summary Real-world projectile motion is influenced by multiple external forces and geometric considerations. While the basic model offers insight, high-accuracy predictions require: Realistic force modeling Coordinate transformations Computational techniques The flexibility of the core equations allows for layered complexity without losing foundational clarity. 4. Computational Simulation and Visualization \u2705 1. Basic Trajectory Simulation (Single Launch) Simulates and plots the trajectory for a given angle, velocity, and height. import numpy as np import matplotlib.pyplot as plt # Parameters v0 = 30 # initial speed (m/s) theta_deg = 45 # launch angle (degrees) h0 = 0 # initial height (m) g = 9.81 # gravity (m/s\u00b2) # Convert to radians theta = np.radians(theta_deg) # Time of flight t_flight = (v0 * np.sin(theta) + np.sqrt((v0 * np.sin(theta))**2 + 2 * g * h0)) / g t = np.linspace(0, t_flight, num=300) # Trajectory equations x = v0 * np.cos(theta) * t y = h0 + v0 * np.sin(theta) * t - 0.5 * g * t**2 # Plot plt.figure() plt.plot(x, y) plt.title(f\"Projectile Trajectory at {theta_deg}\u00b0\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Height (m)\") plt.grid(True) plt.show() \u2705 2. Range vs. Angle Curve Plots the horizontal range as a function of angle for a flat surface ($h_0 = 0$). angles_deg = np.linspace(0, 90, 200) v0 = 30 g = 9.81 ranges = (v0**2) * np.sin(2 * np.radians(angles_deg)) / g plt.figure() plt.plot(angles_deg, ranges) plt.title(\"Range vs. Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.grid(True) plt.show() \u2705 3. Overlay of Multiple Trajectories (Different Angles) Visualizes how the angle affects the shape and range of the trajectory. angles_deg = [15, 30, 45, 60, 75] v0 = 30 h0 = 0 g = 9.81 plt.figure() for angle in angles_deg: theta = np.radians(angle) t_flight = (2 * v0 * np.sin(theta)) / g t = np.linspace(0, t_flight, num=300) x = v0 * np.cos(theta) * t y = v0 * np.sin(theta) * t - 0.5 * g * t**2 plt.plot(x, y, label=f\"{angle}\u00b0\") plt.title(\"Trajectories at Different Launch Angles\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Height (m)\") plt.legend() plt.grid(True) plt.show() \u2705 4. Effect of Initial Velocity on Range Plots how range varies with increasing speed at a fixed angle. v0_values = np.linspace(10, 100, 100) theta = np.radians(45) g = 9.81 ranges = (v0_values**2) * np.sin(2 * theta) / g plt.figure() plt.plot(v0_values, ranges) plt.title(\"Range vs. Initial Velocity at 45\u00b0\") plt.xlabel(\"Initial Speed (m/s)\") plt.ylabel(\"Range (m)\") plt.grid(True) plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion is a classical physics problem that can be fully described using Newton\u2019s laws of motion and the kinematic equations. In this section, we will derive the governing equations, define key variables, and discuss the structural independence of horizontal and vertical components of the motion.","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-governing-equations-of-motion","text":"Assume a particle is projected from an initial height \\(h_0\\) with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) above the horizontal. We ignore air resistance for simplicity. We resolve the motion into two orthogonal components: Horizontal (x-axis) Vertical (y-axis) Using kinematics: Horizontal Motion: - Constant velocity motion (no horizontal acceleration) $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ Vertical Motion: - Accelerated motion due to gravity $$ y(t) = h_0 + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$ where: - \\(x(t)\\) and \\(y(t)\\) are positions as functions of time \\(t\\) - \\(g\\) is the acceleration due to gravity (typically \\(9.81 \\, \\text{m/s}^2\\) )","title":"1.1 Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-key-variables","text":"\\(\\theta\\) : Angle of projection (radians or degrees) \\(v_0\\) : Initial velocity (magnitude) \\(g\\) : Acceleration due to gravity ( \\(9.81 \\, \\text{m/s}^2\\) on Earth) \\(h_0\\) : Initial height from which the projectile is launched \\(t\\) : Time variable (s) \\(x(t), y(t)\\) : Horizontal and vertical displacements as functions of time","title":"1.2 Key Variables"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#13-independence-of-motion-components","text":"According to Newton\u2019s Second Law, motion along perpendicular axes is independent : Horizontal motion is uniform (no acceleration). Vertical motion is uniformly accelerated (due to gravity). This allows the problem to be decoupled into two separate 1D problems.","title":"1.3 Independence of Motion Components"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#14-range-as-a-function-of-angle","text":"The horizontal range \\(R\\) is the horizontal distance traveled when the projectile returns to the ground ( \\(y = 0\\) ). For a flat surface ( \\(h_0 = 0\\) ), set \\(y(t) = 0\\) : \\[ 0 = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] Solving for time of flight \\(T\\) (non-zero solution): \\[ T = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Substitute into horizontal displacement: \\[ R = x(T) = v_0 \\cos(\\theta) \\cdot T = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Thus, the range depends on: Square of initial speed \\(v_0\\) Sine of double the angle \\(\\sin(2\\theta)\\) Inversely on gravity \\(g\\)","title":"1.4 Range as a Function of Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#15-symmetry-in-motion","text":"In the absence of air resistance and with \\(h_0 = 0\\) , projectile motion exhibits time-reversal symmetry : The trajectory is a parabola symmetric about the apex. The time to reach maximum height equals the time to descend from it. Mathematically: - The height at time \\(t\\) equals the height at time \\(T - t\\) - Maximum range occurs at \\(\\theta = 45^\\circ\\) since \\(\\sin(2\\theta)\\) is maximal when \\(2\\theta = 90^\\circ\\)","title":"1.5 Symmetry in Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#16-simplifying-assumptions","text":"To isolate the core physics: No air resistance (ideal projectile) Constant gravitational acceleration Flat launch and landing surfaces Rigid-body approximation (treat the projectile as a point mass) These assumptions allow analytical solutions and illustrate core physical principles. For real-world modeling, corrections may be introduced.","title":"1.6 Simplifying Assumptions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analytical-range-dependency","text":"In this section, we analyze the mathematical structure of the horizontal range of projectile motion as a function of various parameters: launch angle, initial velocity, gravitational acceleration, and launch height. We begin with the canonical case of a ground-level launch, then extend to arbitrary launch heights and perform sensitivity analysis.","title":"2. Analytical Range Dependency"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-range-equation-ground-level-launch","text":"Assuming the projectile is launched from and lands on the same horizontal level ( \\(h_0 = 0\\) ), the time of flight \\(T\\) is derived from setting vertical displacement to zero: \\[ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 = 0 \\] Ignoring the trivial solution \\(t = 0\\) , the total time of flight is: \\[ T = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Substituting into the horizontal position: \\[ R = x(T) = v_0 \\cos(\\theta) \\cdot T \\] Therefore, the horizontal range is: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\]","title":"2.1 Range Equation \u2014 Ground-Level Launch"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-extension-to-non-zero-launch-height","text":"Now consider the projectile launched from a height \\(h_0 > 0\\) . The vertical displacement is: \\[ y(t) = h_0 + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] Set \\(y(t) = 0\\) and solve the quadratic: \\[ 0 = h_0 + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] Using the quadratic formula: \\[ t = \\frac{v_0 \\sin(\\theta) + \\sqrt{(v_0 \\sin(\\theta))^2 + 2 g h_0}}{g} \\] Then, the range becomes: \\[ R = v_0 \\cos(\\theta) \\cdot \\left( \\frac{v_0 \\sin(\\theta) + \\sqrt{(v_0 \\sin(\\theta))^2 + 2 g h_0}}{g} \\right) \\] This formula accounts for the increased time aloft due to the launch height \\(h_0\\) .","title":"2.2 Extension to Non-Zero Launch Height"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#23-range-vs-angle-maximum-range-angle","text":"In the ground-level case, since: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] The maximum value of \\(\\sin(2\\theta)\\) occurs when: \\[ 2\\theta = 90^\\circ \\Rightarrow \\theta = 45^\\circ \\] So the maximum range for a flat launch occurs at \\(\\theta = 45^\\circ\\) . For non-zero \\(h_0\\) , the optimal angle shifts slightly downward, and must be found numerically or via calculus optimization.","title":"2.3 Range vs. Angle \u2014 Maximum Range Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#24-sensitivity-analysis","text":"We now consider how the range \\(R\\) responds to changes in key parameters.","title":"2.4 Sensitivity Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#sensitivity-to-angle-theta","text":"In the ground-level case: \\[ R(\\theta) = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Highly nonlinear dependence due to sine function. Symmetry: \\(R(\\theta) = R(90^\\circ - \\theta)\\) . Range is sensitive near \\(\\theta = 45^\\circ\\) (small changes can cause noticeable deviation).","title":"\u27a4 Sensitivity to Angle (\\(\\theta\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#sensitivity-to-initial-velocity-v_0","text":"Since: \\[ R \\propto v_0^2 \\] Quadratic growth in range with velocity. Doubling \\(v_0\\) results in a fourfold increase in range (if angle and \\(g\\) remain fixed).","title":"\u27a4 Sensitivity to Initial Velocity (\\(v_0\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#sensitivity-to-gravity-g","text":"Again from: \\[ R \\propto \\frac{1}{g} \\] Inversely proportional : Higher gravity leads to shorter range. E.g., on the Moon ( \\(g \\approx 1.63 \\, \\text{m/s}^2\\) ), projectiles travel farther than on Earth.","title":"\u27a4 Sensitivity to Gravity (\\(g\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#combined-dependencies","text":"Overall, the range is governed by: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\quad \\text{(for } h_0 = 0\\text{)} \\] And is nonlinear with respect to: - Angle \\(\\theta\\) (trigonometric dependency) - Velocity \\(v_0\\) (quadratic) - Gravity \\(g\\) (reciprocal)","title":"\u27a4 Combined Dependencies"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#25-summary","text":"The classical range equation provides insight into how projectiles behave under ideal conditions. Extensions to non-zero heights introduce asymmetry and more complex dynamics. Sensitivity to initial conditions emphasizes the need for precision in real-world applications like sports or engineering.","title":"2.5 Summary"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"While the idealized model of projectile motion is useful for conceptual understanding, its application in the real world requires adjustments for various non-ideal conditions. This section explores practical scenarios and the modifications needed to extend the basic equations of motion.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#31-real-world-scenarios","text":"Projectile motion underpins many fields in science, engineering, and everyday life. Examples include: Sports: Soccer, basketball, golf \u2014 predicting the arc of a kicked or thrown ball. Optimizing angle and speed for maximum distance or accuracy. Ballistics: Firearms and artillery \u2014 range, angle, and impact prediction. Military targeting systems rely on modified projectile models. Aerospace: Rocket launches, space re-entry paths. Orbital mechanics incorporates gravitational variation and drag. Engineering: Water jets in fountains. Debris trajectory analysis for structural safety.","title":"3.1 Real-World Scenarios"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#32-non-ideal-conditions","text":"","title":"3.2 Non-Ideal Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#air-resistance","text":"Air resistance (drag) introduces a velocity-dependent force, typically modeled as: \\[ \\vec{F}_d = -\\frac{1}{2} C_d \\rho A v^2 \\hat{v} \\] where: - \\(C_d\\) : Drag coefficient (depends on shape and surface) - \\(\\rho\\) : Air density - \\(A\\) : Cross-sectional area - \\(v\\) : Velocity magnitude - \\(\\hat{v}\\) : Unit vector in the direction of motion Effects: - Reduces horizontal range. - Breaks time symmetry. - Requires numerical methods to solve differential equations of motion.","title":"\u27a4 Air Resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#wind","text":"Wind adds a constant or variable velocity component to the system: Headwind decreases effective horizontal velocity. Tailwind increases it. Crosswinds alter lateral displacement (especially important in ballistics). Wind forces are often modeled as: \\[ \\vec{F}_{\\text{wind}} = m \\vec{a}_{\\text{wind}} \\] Where \\(\\vec{a}_{\\text{wind}}\\) is an external acceleration due to wind influence.","title":"\u27a4 Wind"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#launch-fromonto-a-slope","text":"For inclined surfaces, the coordinate axes must be rotated to align with the slope. Let the incline angle be \\(\\phi\\) . Adjust equations to project velocity components along and perpendicular to the slope: $$ v_{x'} = v_0 \\cos(\\theta - \\phi), \\quad v_{y'} = v_0 \\sin(\\theta - \\phi) $$ Gravity also decomposes accordingly: $$ g_{x'} = g \\sin(\\phi), \\quad g_{y'} = g \\cos(\\phi) $$ Result: - More complex motion. - Landing point must be calculated by solving in a rotated frame.","title":"\u27a4 Launch from/onto a Slope"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#33-modifications-to-the-basic-model","text":"To adapt the projectile model to these practical scenarios, several modifications are typically introduced: Condition Modification Required Solution Method Air Resistance Add quadratic or linear drag terms to force Numerical (e.g., Runge-Kutta) Wind Modify net velocity and external forces Analytic + numeric Uneven Terrain Adjust coordinate system and boundaries Trigonometric projection Variable Gravity Use \\(g(h)\\) decreasing with altitude Calculus-based modeling Coriolis Effect Add Earth-rotation corrections Used in long-range targeting","title":"3.3 Modifications to the Basic Model"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#34-summary","text":"Real-world projectile motion is influenced by multiple external forces and geometric considerations. While the basic model offers insight, high-accuracy predictions require: Realistic force modeling Coordinate transformations Computational techniques The flexibility of the core equations allows for layered complexity without losing foundational clarity.","title":"3.4 Summary"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-computational-simulation-and-visualization","text":"","title":"4. Computational Simulation and Visualization"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-basic-trajectory-simulation-single-launch","text":"Simulates and plots the trajectory for a given angle, velocity, and height. import numpy as np import matplotlib.pyplot as plt # Parameters v0 = 30 # initial speed (m/s) theta_deg = 45 # launch angle (degrees) h0 = 0 # initial height (m) g = 9.81 # gravity (m/s\u00b2) # Convert to radians theta = np.radians(theta_deg) # Time of flight t_flight = (v0 * np.sin(theta) + np.sqrt((v0 * np.sin(theta))**2 + 2 * g * h0)) / g t = np.linspace(0, t_flight, num=300) # Trajectory equations x = v0 * np.cos(theta) * t y = h0 + v0 * np.sin(theta) * t - 0.5 * g * t**2 # Plot plt.figure() plt.plot(x, y) plt.title(f\"Projectile Trajectory at {theta_deg}\u00b0\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Height (m)\") plt.grid(True) plt.show()","title":"\u2705 1. Basic Trajectory Simulation (Single Launch)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-range-vs-angle-curve","text":"Plots the horizontal range as a function of angle for a flat surface ($h_0 = 0$). angles_deg = np.linspace(0, 90, 200) v0 = 30 g = 9.81 ranges = (v0**2) * np.sin(2 * np.radians(angles_deg)) / g plt.figure() plt.plot(angles_deg, ranges) plt.title(\"Range vs. Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.grid(True) plt.show()","title":"\u2705 2. Range vs. Angle Curve"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-overlay-of-multiple-trajectories-different-angles","text":"Visualizes how the angle affects the shape and range of the trajectory. angles_deg = [15, 30, 45, 60, 75] v0 = 30 h0 = 0 g = 9.81 plt.figure() for angle in angles_deg: theta = np.radians(angle) t_flight = (2 * v0 * np.sin(theta)) / g t = np.linspace(0, t_flight, num=300) x = v0 * np.cos(theta) * t y = v0 * np.sin(theta) * t - 0.5 * g * t**2 plt.plot(x, y, label=f\"{angle}\u00b0\") plt.title(\"Trajectories at Different Launch Angles\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Height (m)\") plt.legend() plt.grid(True) plt.show()","title":"\u2705 3. Overlay of Multiple Trajectories (Different Angles)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-effect-of-initial-velocity-on-range","text":"Plots how range varies with increasing speed at a fixed angle. v0_values = np.linspace(10, 100, 100) theta = np.radians(45) g = 9.81 ranges = (v0_values**2) * np.sin(2 * theta) / g plt.figure() plt.plot(v0_values, ranges) plt.title(\"Range vs. Initial Velocity at 45\u00b0\") plt.xlabel(\"Initial Speed (m/s)\") plt.ylabel(\"Range (m)\") plt.grid(True) plt.show()","title":"\u2705 4. Effect of Initial Velocity on Range"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 1. Theoretical Foundation Governing Differential Equation The equation of motion for a forced damped pendulum is derived from Newton's second law or the torque equation. It accounts for three forces: restoring torque, damping torque, and external driving torque. The governing equation is: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin(\\theta) = A \\cos(\\omega t) \\] Where: - \\(\\theta(t)\\) is the angular displacement, - \\(\\gamma\\) is the damping coefficient, - \\(\\omega_0 = \\sqrt{\\frac{g}{l}}\\) is the natural frequency of the undamped pendulum, - \\(A\\) is the amplitude of the external periodic driving force, - \\(\\omega\\) is the driving frequency. Linearization for Small-Angle Approximations For small angular displacements, \\(\\theta \\ll 1\\) , the sine function can be approximated by its Taylor expansion: \\[ \\sin(\\theta) \\approx \\theta \\] Thus, the linearized equation becomes: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is the standard form of a driven damped harmonic oscillator . Analytical Solution of the Linearized System We consider the general solution as a sum of the homogeneous and particular solutions: Homogeneous Solution: Solve: $$ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = 0 $$ The characteristic equation is: $$ r^2 + \\gamma r + \\omega_0^2 = 0 $$ Its solution depends on the discriminant \\(\\Delta = \\gamma^2 - 4\\omega_0^2\\) : - Underdamped ( \\(\\gamma^2 < 4\\omega_0^2\\) ): Oscillatory decay - Critically damped ( \\(\\gamma^2 = 4\\omega_0^2\\) ): Fastest return to equilibrium without oscillation - Overdamped ( \\(\\gamma^2 > 4\\omega_0^2\\) ): Slow non-oscillatory return Particular Solution: Assume a solution of the form: $$ \\theta_p(t) = B \\cos(\\omega t - \\delta) $$ Substitute into the linearized equation and solve for amplitude \\(B\\) and phase lag \\(\\delta\\) : $$ B = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + \\gamma^2 \\omega^2}}, \\quad \\tan(\\delta) = \\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2} $$ Natural Frequency (Undamped, Unforced System) For the simple pendulum with no damping or driving force: $$ \\frac{d^2\\theta}{dt^2} + \\omega_0^2 \\theta = 0 $$ This is a second-order linear ODE with the solution: $$ \\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi) $$ Where: - \\(\\omega_0 = \\sqrt{\\frac{g}{l}}\\) is the natural frequency , - \\(\\theta_0\\) is the initial amplitude, - \\(\\phi\\) is the initial phase. Resonance Conditions Resonance occurs when the driving frequency \\(\\omega\\) approaches the natural frequency \\(\\omega_0\\) of the system. In the absence of damping ( \\(\\gamma = 0\\) ), the amplitude becomes: \\[ B \\rightarrow \\infty \\quad \\text{as} \\quad \\omega \\to \\omega_0 \\] With damping, resonance occurs at: \\[ \\omega_{\\text{res}} = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{2}} \\] Energy Transfer under Resonance At resonance, the energy input from the driving force is maximized. Energy is transferred into the system constructively, increasing the oscillation amplitude. The instantaneous power delivered by the driving force is: \\[ P(t) = \\tau_{\\text{drive}} \\cdot \\frac{d\\theta}{dt} = A \\cos(\\omega t) \\cdot \\frac{d\\theta}{dt} \\] The average power over one cycle is maximized when \\(\\omega \\approx \\omega_{\\text{res}}\\) , indicating efficient energy absorption and larger oscillations. 2. Analysis of Dynamics 2.1 Effect of Damping ( \\(\\gamma\\) ) The damping coefficient \\(\\gamma\\) controls the rate of energy loss in the system. Depending on the value of \\(\\gamma\\) , the system exhibits three distinct regimes in the absence of driving force ( \\(A = 0\\) ): Underdamped ( \\(\\gamma^2 < 4\\omega_0^2\\) ) The system oscillates with gradually decreasing amplitude. The solution takes the form: $$ \\theta(t) = e^{-\\frac{\\gamma}{2} t} \\left( C_1 \\cos(\\omega_d t) + C_2 \\sin(\\omega_d t) \\right) $$ Where \\(\\omega_d = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{4}}\\) is the damped natural frequency. Critically Damped ( \\(\\gamma^2 = 4\\omega_0^2\\) ) The system returns to equilibrium as fast as possible without oscillating. General solution: $$ \\theta(t) = (C_1 + C_2 t)e^{-\\frac{\\gamma}{2} t} $$ Overdamped ( \\(\\gamma^2 > 4\\omega_0^2\\) ) No oscillations occur; the system returns to equilibrium slowly. The response is governed by two distinct exponential decays. 2.2 Varying Driving Amplitude ( \\(A\\) ) The driving amplitude determines the energy supplied to the system. As \\(A\\) increases: The steady-state amplitude of oscillation increases. At large \\(A\\) , the nonlinear nature of the sine term becomes prominent, leading to: Asymmetric oscillations Sudden jumps in amplitude (discontinuities in response curves) Bifurcations , where the system transitions between different oscillatory modes This nonlinear response can be visualized with bifurcation diagrams where \\(\\theta\\) (or \\(\\dot{\\theta}\\) ) is plotted against \\(A\\) . 2.3 Varying Driving Frequency ( \\(\\omega\\) ) When scanning across a range of driving frequencies \\(\\omega\\) for a fixed amplitude: The system exhibits resonance behavior , peaking at or near \\(\\omega_0\\) . The resonance curve shows the response amplitude \\(B\\) as a function of \\(\\omega\\) : $$ B(\\omega) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + \\gamma^2 \\omega^2}} $$ In nonlinear systems, this curve becomes asymmetric and may exhibit hysteresis . 2.4 Identifying Conditions for Chaos As both \\(A\\) and \\(\\omega\\) increase, the forced damped pendulum can enter chaotic regimes . Diagnostic Tools: Lyapunov Exponents : A positive largest Lyapunov exponent ( \\(\\lambda > 0\\) ) indicates sensitivity to initial conditions\u2014a hallmark of chaos. Bifurcation Diagrams : Show qualitative changes in the structure of solutions as a parameter (e.g., \\(A\\) or \\(\\omega\\) ) varies. Poincar\u00e9 Sections : A stroboscopic map sampled once per drive cycle. A single point indicates periodic motion; a fractal structure indicates chaos. 2.5 Quasiperiodic and Chaotic Regimes Quasiperiodic Motion: Involves two incommensurate frequencies. Phase space trajectories form tori . Poincar\u00e9 section: closed curves. Chaotic Motion: Aperiodic and highly sensitive to initial conditions. Phase space trajectory fills a strange attractor . Poincar\u00e9 section: scattered points forming a fractal structure. Visualization of both regimes helps to contrast ordered vs. disordered dynamics. Examples include: Time series : Smooth and repeating vs. irregular and erratic. Phase diagrams : Closed loops vs. tangled trajectories. 2.6 Stability of Fixed Points and Limit Cycles To assess the stability of equilibria and periodic orbits: Linear Stability Analysis: Linearize around a fixed point or trajectory: $$ \\theta'' + \\gamma \\theta' + f(\\theta) = 0 $$ Compute eigenvalues of the Jacobian matrix. If all have negative real parts, the fixed point is stable. Floquet Theory: Used for periodic solutions . Determines the stability of limit cycles by examining the monodromy matrix: - If all Floquet multipliers have magnitude < 1: the cycle is stable. - If any multiplier > 1: the cycle is unstable. This analytical toolkit enables a comprehensive understanding of the pendulum's dynamic behavior across parameter regimes. 3. Practical Applications The forced damped pendulum serves as a versatile analog for many real-world systems governed by similar nonlinear dynamics, especially those involving periodic driving and energy dissipation. 3.1 Real-World Analogues of the Forced Damped Pendulum Several physical systems can be modeled or approximated by the dynamics of a forced damped pendulum: A. Suspension Bridges Example: Tacoma Narrows Bridge (1940 collapse) . The bridge deck behaved like a driven oscillator, responding to periodic wind forces. Self-excited oscillations and aerodynamically driven resonance resulted in torsional instability and eventual structural failure. Model Mapping: Angular displacement \\(\\theta(t) \\leftrightarrow\\) torsional deflection of the bridge. Driving force \\(A \\cos(\\omega t) \\leftrightarrow\\) periodic wind gusts or vortex shedding. Damping \\(\\gamma \\leftrightarrow\\) internal and aerodynamic damping. B. Piezoelectric Energy Harvesters These devices convert mechanical vibrations into electrical energy. Typically modeled as a damped driven cantilever beam , which behaves similarly to a pendulum. Optimal energy transfer occurs at or near the resonant frequency. Key Model Parameters: \\(\\omega_0\\) matches the structure\u2019s natural frequency. \\(A\\) corresponds to ambient vibration amplitude. \\(\\gamma\\) accounts for mechanical and electrical energy losses. C. Electronic RLC Circuits Under AC Drive The behavior of a resistor-inductor-capacitor (RLC) circuit driven by an AC source is mathematically identical to the linearized forced damped pendulum. Governing Equation for RLC Circuit: \\[ L \\frac{d^2Q}{dt^2} + R \\frac{dQ}{dt} + \\frac{Q}{C} = V_0 \\cos(\\omega t) \\] Map to pendulum model: \\(Q(t) \\leftrightarrow \\theta(t)\\) (charge analogous to angular displacement), \\(R \\leftrightarrow \\gamma\\) (resistance as damping), \\(1/\\sqrt{LC} \\leftrightarrow \\omega_0\\) (resonant frequency). Important insight: Signal clarity and selectivity in RLC filters depend on the damping and proximity to resonance. 3.2 Engineering Considerations A. Resonance Systems operating near resonance can exhibit large-amplitude oscillations : In bridges \u2192 destructive structural vibration. In circuits \u2192 signal amplification or filtering. In energy harvesters \u2192 optimal power output. Engineers must: Design systems to avoid unwanted resonance (e.g., bridge design, building sway), Or exploit resonance safely (e.g., vibration-based energy harvesting). B. Chaos In mechanical or electrical systems, chaotic behavior implies extreme sensitivity to initial conditions and unpredictable response . Can lead to: Mechanical failure, Signal distortion or noise in electronic circuits, Instability in feedback control systems. Design strategies involve: Damping augmentation to suppress chaotic regions, Parameter tuning to confine systems within stable regimes. C. Efficiency and Stability Maximizing energy transfer or maintaining control requires: Precise tuning of system parameters ( \\(\\omega\\) , \\(A\\) , \\(\\gamma\\) ), Careful balancing between energy input and dissipation , Robust system architecture that can withstand unexpected transitions. These practical mappings highlight the universality of the forced damped pendulum model and its relevance across structural, mechanical, and electrical engineering domains. 4. Computational Simulation and Visualization 1. Numerical Solver (Nonlinear Pendulum, Runge-Kutta) import numpy as np from scipy.integrate import solve_ivp # Nonlinear forced damped pendulum def pendulum(t, y, gamma, omega0, A, omega_drive): theta, omega = y dtheta_dt = omega domega_dt = -gamma * omega - omega0**2 * np.sin(theta) + A * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] # Parameters gamma = 0.2 omega0 = 1.5 A = 1.2 omega_drive = 2/3 y0 = [0.2, 0] # Initial conditions: [theta, omega] t_span = (0, 100) t_eval = np.linspace(*t_span, 10000) sol = solve_ivp(pendulum, t_span, y0, args=(gamma, omega0, A, omega_drive), t_eval=t_eval) 2. Time Series Plot (Angular Displacement and Velocity) ```python import matplotlib.pyplot as plt plt.figure() plt.plot(sol.t, sol.y[0], label='\u03b8(t)') plt.plot(sol.t, sol.y[1], label='\u03c9(t)', alpha=0.7) plt.xlabel('Time') plt.ylabel('Amplitude') plt.title('Time Series of \u03b8 and \u03c9') plt.legend() plt.grid(True) plt.show() ![alt text](image-9.png) ## 3. Phase Space Diagram (\u03b8 vs. \u03c9) ```python plt.figure() plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.xlabel('\u03b8') plt.ylabel('\u03c9') plt.title('Phase Space Diagram') plt.grid(True) plt.show() 4. Poincar\u00e9 Section (Stroboscopic Map) T_drive = 2 * np.pi / omega_drive times = np.arange(0, t_span[1], T_drive) indices = [np.abs(sol.t - t).argmin() for t in times] theta_poincare = sol.y[0][indices] omega_poincare = sol.y[1][indices] plt.figure() plt.plot(theta_poincare, omega_poincare, 'o', markersize=2) plt.xlabel('\u03b8 (mod 2\u03c0)') plt.ylabel('\u03c9') plt.title('Poincar\u00e9 Section') plt.grid(True) plt.show() 5. Bifurcation Diagram (Varying A) As = np.linspace(1.0, 1.5, 100) theta_samples = [] for A_val in As: sol = solve_ivp(pendulum, t_span, y0, args=(gamma, omega0, A_val, omega_drive), t_eval=t_eval) times = np.arange(90, 100, T_drive) indices = [np.abs(sol.t - t).argmin() for t in times] theta_samples.extend([(A_val, sol.y[0][i] % (2 * np.pi)) for i in indices]) bif_As, bif_thetas = zip(*theta_samples) plt.figure() plt.plot(bif_As, bif_thetas, 'k.', markersize=0.5) plt.xlabel('Driving Amplitude A') plt.ylabel('\u03b8 (mod 2\u03c0)') plt.title('Bifurcation Diagram') plt.grid(True) plt.show() ## 6. Animation of the Pendulum ```python import matplotlib.animation as animation fig, ax = plt.subplots() ax.set_xlim(-1.2, 1.2) ax.set_ylim(-1.2, 1.2) line, = ax.plot([], [], 'o-', lw=2) def update(i): x = np.sin(sol.y[0][i]) y = -np.cos(sol.y[0][i]) line.set_data([0, x], [0, y]) return line, ani = animation.FuncAnimation(fig, update, frames=range(0, len(sol.t), 10), interval=30) plt.title('Forced Damped Pendulum Animation') plt.show() ```","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-differential-equation","text":"The equation of motion for a forced damped pendulum is derived from Newton's second law or the torque equation. It accounts for three forces: restoring torque, damping torque, and external driving torque. The governing equation is: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin(\\theta) = A \\cos(\\omega t) \\] Where: - \\(\\theta(t)\\) is the angular displacement, - \\(\\gamma\\) is the damping coefficient, - \\(\\omega_0 = \\sqrt{\\frac{g}{l}}\\) is the natural frequency of the undamped pendulum, - \\(A\\) is the amplitude of the external periodic driving force, - \\(\\omega\\) is the driving frequency.","title":"Governing Differential Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#linearization-for-small-angle-approximations","text":"For small angular displacements, \\(\\theta \\ll 1\\) , the sine function can be approximated by its Taylor expansion: \\[ \\sin(\\theta) \\approx \\theta \\] Thus, the linearized equation becomes: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] This is the standard form of a driven damped harmonic oscillator .","title":"Linearization for Small-Angle Approximations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#analytical-solution-of-the-linearized-system","text":"We consider the general solution as a sum of the homogeneous and particular solutions:","title":"Analytical Solution of the Linearized System"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#homogeneous-solution","text":"Solve: $$ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = 0 $$ The characteristic equation is: $$ r^2 + \\gamma r + \\omega_0^2 = 0 $$ Its solution depends on the discriminant \\(\\Delta = \\gamma^2 - 4\\omega_0^2\\) : - Underdamped ( \\(\\gamma^2 < 4\\omega_0^2\\) ): Oscillatory decay - Critically damped ( \\(\\gamma^2 = 4\\omega_0^2\\) ): Fastest return to equilibrium without oscillation - Overdamped ( \\(\\gamma^2 > 4\\omega_0^2\\) ): Slow non-oscillatory return","title":"Homogeneous Solution:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#particular-solution","text":"Assume a solution of the form: $$ \\theta_p(t) = B \\cos(\\omega t - \\delta) $$ Substitute into the linearized equation and solve for amplitude \\(B\\) and phase lag \\(\\delta\\) : $$ B = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + \\gamma^2 \\omega^2}}, \\quad \\tan(\\delta) = \\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2} $$","title":"Particular Solution:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#natural-frequency-undamped-unforced-system","text":"For the simple pendulum with no damping or driving force: $$ \\frac{d^2\\theta}{dt^2} + \\omega_0^2 \\theta = 0 $$ This is a second-order linear ODE with the solution: $$ \\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi) $$ Where: - \\(\\omega_0 = \\sqrt{\\frac{g}{l}}\\) is the natural frequency , - \\(\\theta_0\\) is the initial amplitude, - \\(\\phi\\) is the initial phase.","title":"Natural Frequency (Undamped, Unforced System)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-conditions","text":"Resonance occurs when the driving frequency \\(\\omega\\) approaches the natural frequency \\(\\omega_0\\) of the system. In the absence of damping ( \\(\\gamma = 0\\) ), the amplitude becomes: \\[ B \\rightarrow \\infty \\quad \\text{as} \\quad \\omega \\to \\omega_0 \\] With damping, resonance occurs at: \\[ \\omega_{\\text{res}} = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{2}} \\]","title":"Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#energy-transfer-under-resonance","text":"At resonance, the energy input from the driving force is maximized. Energy is transferred into the system constructively, increasing the oscillation amplitude. The instantaneous power delivered by the driving force is: \\[ P(t) = \\tau_{\\text{drive}} \\cdot \\frac{d\\theta}{dt} = A \\cos(\\omega t) \\cdot \\frac{d\\theta}{dt} \\] The average power over one cycle is maximized when \\(\\omega \\approx \\omega_{\\text{res}}\\) , indicating efficient energy absorption and larger oscillations.","title":"Energy Transfer under Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#21-effect-of-damping-gamma","text":"The damping coefficient \\(\\gamma\\) controls the rate of energy loss in the system. Depending on the value of \\(\\gamma\\) , the system exhibits three distinct regimes in the absence of driving force ( \\(A = 0\\) ):","title":"2.1 Effect of Damping (\\(\\gamma\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#underdamped-gamma2-4omega_02","text":"The system oscillates with gradually decreasing amplitude. The solution takes the form: $$ \\theta(t) = e^{-\\frac{\\gamma}{2} t} \\left( C_1 \\cos(\\omega_d t) + C_2 \\sin(\\omega_d t) \\right) $$ Where \\(\\omega_d = \\sqrt{\\omega_0^2 - \\frac{\\gamma^2}{4}}\\) is the damped natural frequency.","title":"Underdamped (\\(\\gamma^2 &lt; 4\\omega_0^2\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#critically-damped-gamma2-4omega_02","text":"The system returns to equilibrium as fast as possible without oscillating. General solution: $$ \\theta(t) = (C_1 + C_2 t)e^{-\\frac{\\gamma}{2} t} $$","title":"Critically Damped (\\(\\gamma^2 = 4\\omega_0^2\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#overdamped-gamma2-4omega_02","text":"No oscillations occur; the system returns to equilibrium slowly. The response is governed by two distinct exponential decays.","title":"Overdamped (\\(\\gamma^2 &gt; 4\\omega_0^2\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#22-varying-driving-amplitude-a","text":"The driving amplitude determines the energy supplied to the system. As \\(A\\) increases: The steady-state amplitude of oscillation increases. At large \\(A\\) , the nonlinear nature of the sine term becomes prominent, leading to: Asymmetric oscillations Sudden jumps in amplitude (discontinuities in response curves) Bifurcations , where the system transitions between different oscillatory modes This nonlinear response can be visualized with bifurcation diagrams where \\(\\theta\\) (or \\(\\dot{\\theta}\\) ) is plotted against \\(A\\) .","title":"2.2 Varying Driving Amplitude (\\(A\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#23-varying-driving-frequency-omega","text":"When scanning across a range of driving frequencies \\(\\omega\\) for a fixed amplitude: The system exhibits resonance behavior , peaking at or near \\(\\omega_0\\) . The resonance curve shows the response amplitude \\(B\\) as a function of \\(\\omega\\) : $$ B(\\omega) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + \\gamma^2 \\omega^2}} $$ In nonlinear systems, this curve becomes asymmetric and may exhibit hysteresis .","title":"2.3 Varying Driving Frequency (\\(\\omega\\))"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#24-identifying-conditions-for-chaos","text":"As both \\(A\\) and \\(\\omega\\) increase, the forced damped pendulum can enter chaotic regimes .","title":"2.4 Identifying Conditions for Chaos"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#diagnostic-tools","text":"Lyapunov Exponents : A positive largest Lyapunov exponent ( \\(\\lambda > 0\\) ) indicates sensitivity to initial conditions\u2014a hallmark of chaos. Bifurcation Diagrams : Show qualitative changes in the structure of solutions as a parameter (e.g., \\(A\\) or \\(\\omega\\) ) varies. Poincar\u00e9 Sections : A stroboscopic map sampled once per drive cycle. A single point indicates periodic motion; a fractal structure indicates chaos.","title":"Diagnostic Tools:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#25-quasiperiodic-and-chaotic-regimes","text":"","title":"2.5 Quasiperiodic and Chaotic Regimes"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#quasiperiodic-motion","text":"Involves two incommensurate frequencies. Phase space trajectories form tori . Poincar\u00e9 section: closed curves.","title":"Quasiperiodic Motion:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#chaotic-motion","text":"Aperiodic and highly sensitive to initial conditions. Phase space trajectory fills a strange attractor . Poincar\u00e9 section: scattered points forming a fractal structure. Visualization of both regimes helps to contrast ordered vs. disordered dynamics. Examples include: Time series : Smooth and repeating vs. irregular and erratic. Phase diagrams : Closed loops vs. tangled trajectories.","title":"Chaotic Motion:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#26-stability-of-fixed-points-and-limit-cycles","text":"To assess the stability of equilibria and periodic orbits:","title":"2.6 Stability of Fixed Points and Limit Cycles"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#linear-stability-analysis","text":"Linearize around a fixed point or trajectory: $$ \\theta'' + \\gamma \\theta' + f(\\theta) = 0 $$ Compute eigenvalues of the Jacobian matrix. If all have negative real parts, the fixed point is stable.","title":"Linear Stability Analysis:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#floquet-theory","text":"Used for periodic solutions . Determines the stability of limit cycles by examining the monodromy matrix: - If all Floquet multipliers have magnitude < 1: the cycle is stable. - If any multiplier > 1: the cycle is unstable. This analytical toolkit enables a comprehensive understanding of the pendulum's dynamic behavior across parameter regimes.","title":"Floquet Theory:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"The forced damped pendulum serves as a versatile analog for many real-world systems governed by similar nonlinear dynamics, especially those involving periodic driving and energy dissipation.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#31-real-world-analogues-of-the-forced-damped-pendulum","text":"Several physical systems can be modeled or approximated by the dynamics of a forced damped pendulum:","title":"3.1 Real-World Analogues of the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#a-suspension-bridges","text":"Example: Tacoma Narrows Bridge (1940 collapse) . The bridge deck behaved like a driven oscillator, responding to periodic wind forces. Self-excited oscillations and aerodynamically driven resonance resulted in torsional instability and eventual structural failure. Model Mapping: Angular displacement \\(\\theta(t) \\leftrightarrow\\) torsional deflection of the bridge. Driving force \\(A \\cos(\\omega t) \\leftrightarrow\\) periodic wind gusts or vortex shedding. Damping \\(\\gamma \\leftrightarrow\\) internal and aerodynamic damping.","title":"A. Suspension Bridges"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#b-piezoelectric-energy-harvesters","text":"These devices convert mechanical vibrations into electrical energy. Typically modeled as a damped driven cantilever beam , which behaves similarly to a pendulum. Optimal energy transfer occurs at or near the resonant frequency. Key Model Parameters: \\(\\omega_0\\) matches the structure\u2019s natural frequency. \\(A\\) corresponds to ambient vibration amplitude. \\(\\gamma\\) accounts for mechanical and electrical energy losses.","title":"B. Piezoelectric Energy Harvesters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#c-electronic-rlc-circuits-under-ac-drive","text":"The behavior of a resistor-inductor-capacitor (RLC) circuit driven by an AC source is mathematically identical to the linearized forced damped pendulum.","title":"C. Electronic RLC Circuits Under AC Drive"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation-for-rlc-circuit","text":"\\[ L \\frac{d^2Q}{dt^2} + R \\frac{dQ}{dt} + \\frac{Q}{C} = V_0 \\cos(\\omega t) \\] Map to pendulum model: \\(Q(t) \\leftrightarrow \\theta(t)\\) (charge analogous to angular displacement), \\(R \\leftrightarrow \\gamma\\) (resistance as damping), \\(1/\\sqrt{LC} \\leftrightarrow \\omega_0\\) (resonant frequency). Important insight: Signal clarity and selectivity in RLC filters depend on the damping and proximity to resonance.","title":"Governing Equation for RLC Circuit:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#32-engineering-considerations","text":"","title":"3.2 Engineering Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#a-resonance","text":"Systems operating near resonance can exhibit large-amplitude oscillations : In bridges \u2192 destructive structural vibration. In circuits \u2192 signal amplification or filtering. In energy harvesters \u2192 optimal power output. Engineers must: Design systems to avoid unwanted resonance (e.g., bridge design, building sway), Or exploit resonance safely (e.g., vibration-based energy harvesting).","title":"A. Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#b-chaos","text":"In mechanical or electrical systems, chaotic behavior implies extreme sensitivity to initial conditions and unpredictable response . Can lead to: Mechanical failure, Signal distortion or noise in electronic circuits, Instability in feedback control systems. Design strategies involve: Damping augmentation to suppress chaotic regions, Parameter tuning to confine systems within stable regimes.","title":"B. Chaos"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#c-efficiency-and-stability","text":"Maximizing energy transfer or maintaining control requires: Precise tuning of system parameters ( \\(\\omega\\) , \\(A\\) , \\(\\gamma\\) ), Careful balancing between energy input and dissipation , Robust system architecture that can withstand unexpected transitions. These practical mappings highlight the universality of the forced damped pendulum model and its relevance across structural, mechanical, and electrical engineering domains.","title":"C. Efficiency and Stability"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-computational-simulation-and-visualization","text":"","title":"4. Computational Simulation and Visualization"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-numerical-solver-nonlinear-pendulum-runge-kutta","text":"import numpy as np from scipy.integrate import solve_ivp # Nonlinear forced damped pendulum def pendulum(t, y, gamma, omega0, A, omega_drive): theta, omega = y dtheta_dt = omega domega_dt = -gamma * omega - omega0**2 * np.sin(theta) + A * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] # Parameters gamma = 0.2 omega0 = 1.5 A = 1.2 omega_drive = 2/3 y0 = [0.2, 0] # Initial conditions: [theta, omega] t_span = (0, 100) t_eval = np.linspace(*t_span, 10000) sol = solve_ivp(pendulum, t_span, y0, args=(gamma, omega0, A, omega_drive), t_eval=t_eval)","title":"1. Numerical Solver (Nonlinear Pendulum, Runge-Kutta)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-time-series-plot-angular-displacement-and-velocity","text":"```python import matplotlib.pyplot as plt plt.figure() plt.plot(sol.t, sol.y[0], label='\u03b8(t)') plt.plot(sol.t, sol.y[1], label='\u03c9(t)', alpha=0.7) plt.xlabel('Time') plt.ylabel('Amplitude') plt.title('Time Series of \u03b8 and \u03c9') plt.legend() plt.grid(True) plt.show() ![alt text](image-9.png) ## 3. Phase Space Diagram (\u03b8 vs. \u03c9) ```python plt.figure() plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.xlabel('\u03b8') plt.ylabel('\u03c9') plt.title('Phase Space Diagram') plt.grid(True) plt.show()","title":"2. Time Series Plot (Angular Displacement and Velocity)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-poincare-section-stroboscopic-map","text":"T_drive = 2 * np.pi / omega_drive times = np.arange(0, t_span[1], T_drive) indices = [np.abs(sol.t - t).argmin() for t in times] theta_poincare = sol.y[0][indices] omega_poincare = sol.y[1][indices] plt.figure() plt.plot(theta_poincare, omega_poincare, 'o', markersize=2) plt.xlabel('\u03b8 (mod 2\u03c0)') plt.ylabel('\u03c9') plt.title('Poincar\u00e9 Section') plt.grid(True) plt.show()","title":"4. Poincar\u00e9 Section (Stroboscopic Map)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-bifurcation-diagram-varying-a","text":"As = np.linspace(1.0, 1.5, 100) theta_samples = [] for A_val in As: sol = solve_ivp(pendulum, t_span, y0, args=(gamma, omega0, A_val, omega_drive), t_eval=t_eval) times = np.arange(90, 100, T_drive) indices = [np.abs(sol.t - t).argmin() for t in times] theta_samples.extend([(A_val, sol.y[0][i] % (2 * np.pi)) for i in indices]) bif_As, bif_thetas = zip(*theta_samples) plt.figure() plt.plot(bif_As, bif_thetas, 'k.', markersize=0.5) plt.xlabel('Driving Amplitude A') plt.ylabel('\u03b8 (mod 2\u03c0)') plt.title('Bifurcation Diagram') plt.grid(True) plt.show() ## 6. Animation of the Pendulum ```python import matplotlib.animation as animation fig, ax = plt.subplots() ax.set_xlim(-1.2, 1.2) ax.set_ylim(-1.2, 1.2) line, = ax.plot([], [], 'o-', lw=2) def update(i): x = np.sin(sol.y[0][i]) y = -np.cos(sol.y[0][i]) line.set_data([0, x], [0, y]) return line, ani = animation.FuncAnimation(fig, update, frames=range(0, len(sol.t), 10), interval=30) plt.title('Forced Damped Pendulum Animation') plt.show() ```","title":"5. Bifurcation Diagram (Varying A)"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Orbital Period and Orbital Radius \u2014 Theoretical Foundation Newtonian Derivation of Kepler\u2019s Third Law To derive Kepler\u2019s Third Law for circular orbits, we begin by equating the gravitational force providing the centripetal force required for circular motion. Gravitational Force: \\[ F_g = \\frac{G M m}{r^2} \\] Where: - \\( G \\) is the universal gravitational constant - \\( M \\) is the mass of the central body (e.g., a star or planet) - \\( m \\) is the mass of the orbiting object - \\( r \\) is the orbital radius Centripetal Force: \\[ F_c = \\frac{m v^2}{r} \\] For a stable circular orbit, these forces must be equal: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] Cancelling \\( m \\) and rearranging: \\[ v^2 = \\frac{G M}{r} \\] Orbital Period: The orbital period \\( T \\) is the time to complete one full revolution. Since the circumference of the orbit is \\( 2\\pi r \\) : \\[ T = \\frac{2\\pi r}{v} \\] Substitute for \\( v \\) : \\[ T = \\frac{2\\pi r}{\\sqrt{\\frac{G M}{r}}} = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\] Final Form of Kepler\u2019s Third Law: \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This demonstrates the proportionality: \\[ T^2 \\propto r^3 \\] Assumptions in This Derivation The orbit is perfectly circular. The orbiting body's mass \\( m \\) is negligible compared to \\( M \\) . The system is isolated (no perturbations from other bodies). General Relativity effects are ignored (Newtonian approximation). Interpretation For all satellites orbiting the same central mass \\( M \\) , the ratio \\( \\frac{T^2}{r^3} \\) is constant. This law allows astronomers to compare orbital periods and radii without knowing \\( M \\) directly, or to infer \\( M \\) when \\( T \\) and \\( r \\) are known. Orbital Period and Orbital Radius \u2014 Astrophysical Implications Kepler\u2019s Third Law in Astronomy Kepler\u2019s Third Law: \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This fundamental relationship has wide-ranging implications in astronomy and astrophysics. 1. Determining Masses of Celestial Bodies Rearranging Kepler's Law to solve for \\( M \\) : \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] Where: - \\( M \\) is the mass of the central object - \\( r \\) is the orbital radius - \\( T \\) is the orbital period - \\( G \\) is the gravitational constant Application: By measuring \\( T \\) and \\( r \\) , astronomers can calculate the mass of: Planets (from their moons' orbits) Stars (from exoplanets\u2019 orbits) Galaxies (using orbital motion of stars or gas clouds) 2. Determining Orbital Distances If the central mass \\( M \\) is known (e.g., mass of the Sun), Kepler\u2019s Law can be used to calculate the orbital radius \\( r \\) for satellites or planets: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] Useful for: - Predicting satellite altitudes - Estimating distances of exoplanets from their host stars 3. Validating Observational Data By comparing observed values of \\( T \\) and \\( r \\) with theoretical predictions, scientists can: - Confirm the validity of Newtonian mechanics - Detect anomalies (e.g., additional massive bodies, non-gravitational forces) 4. Inferring Existence of Hidden Objects If observed \\( T \\) and \\( r \\) values deviate from expectations: - May suggest presence of dark matter - Or reveal gravitational influence of unseen exoplanets or black holes 5. Limitations and Generalizations The law applies strictly to two-body circular orbits . Elliptical orbits require a more general form using the semi-major axis \\( a \\) : $$ T^2 = \\frac{4\\pi^2}{G M} a^3 $$ For very massive systems or high velocities, General Relativity corrections may be necessary. Orbital Period and Orbital Radius \u2014 Real-World Examples Kepler's Third Law can be directly applied to various real-world systems, from the Earth's Moon to planets in the Solar System. 1. The Moon Orbiting Earth Let\u2019s analyze the Moon\u2019s orbit as a test of Kepler's Third Law. Known values: Orbital radius: $$ r_{\\text{Moon}} \\approx 3.84 \\times 10^8 \\, \\text{m} $$ Orbital period: $$ T_{\\text{Moon}} \\approx 27.32 \\, \\text{days} = 2.36 \\times 10^6 \\, \\text{seconds} $$ Gravitational constant: $$ G = 6.67430 \\times 10^{-11} \\, \\text{m}^3\\,\\text{kg}^{-1}\\,\\text{s}^{-2} $$ Mass of Earth: $$ M_{\\text{Earth}} \\approx 5.972 \\times 10^{24} \\, \\text{kg} $$ Theoretical Prediction: Using: \\[ T = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\] Plugging in the values: \\[ T_{\\text{calc}} = 2\\pi \\sqrt{\\frac{(3.84 \\times 10^8)^3}{6.67430 \\times 10^{-11} \\times 5.972 \\times 10^{24}}} \\approx 2.36 \\times 10^6 \\, \\text{seconds} \\] \u2705 Matches observed period \u2014 confirms accuracy of Kepler's Law. 2. Planetary Orbits in the Solar System Let\u2019s examine the relation between \\( T^2 \\) and \\( r^3 \\) for several planets. Planet Orbital Radius \\( r \\) (AU) Orbital Period \\( T \\) (years) \\( T^2 \\) \\( r^3 \\) Mercury 0.39 0.24 0.058 0.059 Venus 0.72 0.62 0.384 0.373 Earth 1.00 1.00 1.000 1.000 Mars 1.52 1.88 3.534 3.512 Jupiter 5.20 11.86 140.7 140.6 Saturn 9.58 29.46 867.6 880.0 Here, units are in Astronomical Units (AU) and years , making \\( G M = 4\\pi^2 \\) in these units. \u2705 The values of \\( T^2 \\) and \\( r^3 \\) are nearly equal, confirming: \\[ T^2 \\approx r^3 \\] 3. Graphical Validation Plotting \\( T^2 \\) vs \\( r^3 \\) for planetary data gives a linear graph with slope \u2248 1, as expected. Logarithmic Version: Taking log of both sides: \\[ \\log T = \\frac{3}{2} \\log r + \\text{const} \\] This implies that a log-log plot of \\( T \\) vs \\( r \\) will be a straight line with slope 1.5. 4. Applications Beyond the Solar System Used to determine distances of exoplanets from host stars (via transit or radial velocity methods). Used to estimate the mass of binary star systems or even black holes in binary orbits. Summary Real-world data strongly supports Kepler's Third Law in both our Solar System and beyond. Small deviations can often point to exciting new physics or unseen objects. 5. Computational Modeling In this section, we simulate circular orbital motion using Newtonian mechanics to explore and validate Kepler\u2019s Third Law: $$ T^2 \\propto r^3 $$ We define clear assumptions, simulate orbital systems, vary key parameters, and visualize the relationship between orbital period and radius. 5.1 Assumptions and Setup We assume: - A two-body system (massive central body, orbiting satellite) - Perfectly circular orbits - Newtonian gravity is valid - No relativistic effects or perturbations import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 # gravitational constant (m^3 kg^-1 s^-2) # Orbital period calculator for circular orbit def orbital_period(r, M): return 2 * np.pi * np.sqrt(r**3 / (G * M)) 5.2 Plot: \\(T^2\\) vs \\(r^3\\) for Fixed Central Mass (Earth) Here, we simulate a range of orbital radii around Earth and calculate the corresponding orbital periods. # Central mass: Earth M_earth = 5.972e24 # kg # Orbital radii (from 7000 km to 50,000 km) radii = np.linspace(7e6, 5e7, 100) T = orbital_period(radii, M_earth) # Calculate T\u00b2 and r\u00b3 T_squared = T**2 r_cubed = radii**3 # Plot T\u00b2 vs r\u00b3 plt.figure() plt.plot(r_cubed, T_squared, 'o', markersize=4) plt.xlabel('$r^3$ (m\u00b3)') plt.ylabel('$T^2$ (s\u00b2)') plt.title('Kepler\u2019s Law Simulation: $T^2$ vs $r^3$ (Fixed Earth Mass)') plt.grid(True) plt.show() 5.3 Plot: \\(T^2\\) vs \\(r^3\\) for Varying Central Masses Now we compare how different central masses affect the slope of the \\(T^2\\) vs \\(r^3\\) relation. masses = [5.972e24, 1.989e30] # Earth, Sun labels = ['Earth Mass', 'Sun Mass'] plt.figure() for M, label in zip(masses, labels): T = orbital_period(radii, M) T_squared = T**2 r_cubed = radii**3 plt.plot(r_cubed, T_squared, label=label) plt.xlabel('$r^3$ (m\u00b3)') plt.ylabel('$T^2$ (s\u00b2)') plt.title('Effect of Central Mass on $T^2$ vs $r^3$') plt.legend() plt.grid(True) plt.show() 5.4 Plot: Linearity Check with Linear Fit We verify that the relationship between \\(T^2\\) and \\(r^3\\) is linear by fitting a straight line to the data. # Use Earth mass for this check T = orbital_period(radii, M_earth) T_squared = T**2 r_cubed = radii**3 # Linear regression slope, intercept = np.polyfit(r_cubed, T_squared, 1) # Print slope and theoretical value theory_slope = 4 * np.pi**2 / (G * M_earth) print(f\"Simulated Slope: {slope:.3e} s\u00b2/m\u00b3\") print(f\"Theoretical Slope: {theory_slope:.3e} s\u00b2/m\u00b3\") # Plot with fitted line plt.figure() plt.plot(r_cubed, T_squared, 'o', label='Simulated Data') plt.plot(r_cubed, slope * r_cubed + intercept, 'r--', label='Linear Fit') plt.xlabel('$r^3$ (m\u00b3)') plt.ylabel('$T^2$ (s\u00b2)') plt.title('Linearity Verification: $T^2$ vs $r^3$ with Fit') plt.legend() plt.grid(True) plt.show() 5.4 Simulated Orbit Animation: Earth Orbiting the Sun import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation # Constants G = 6.67430e-11 # m^3 kg^-1 s^-2 M_sun = 1.989e30 # kg AU = 1.496e11 # meters T_earth = 365.25 * 24 * 3600 # seconds # Simulation time steps num_frames = 200 times = np.linspace(0, T_earth, num_frames) # Circular orbit position r = AU omega = 2 * np.pi / T_earth x = r * np.cos(omega * times) y = r * np.sin(omega * times) # Set up figure fig, ax = plt.subplots(figsize=(6, 6)) ax.set_xlim(-1.2 * AU, 1.2 * AU) ax.set_ylim(-1.2 * AU, 1.2 * AU) ax.set_aspect('equal') ax.set_title(\"Simulated Orbit: Earth Around the Sun\") ax.set_xlabel(\"X Position (m)\") ax.set_ylabel(\"Y Position (m)\") # Plot objects sun, = ax.plot(0, 0, 'yo', markersize=12, label='Sun') earth, = ax.plot([], [], 'bo', markersize=6, label='Earth') trail, = ax.plot([], [], 'b--', linewidth=0.5) # Initialization function def init(): earth.set_data([], []) trail.set_data([], []) return earth, trail # Update function def update(frame): # Corrected: Pass x[frame] and y[frame] as lists earth.set_data([x[frame]], [y[frame]]) # Trail should receive sequences (arrays) for multiple points trail.set_data(x[:frame+1], y[:frame+1]) return earth, trail # Create animation # Removed interval=50 as it was not in the original code causing the error ani = animation.FuncAnimation(fig, update, frames=num_frames, init_func=init, blit=True) # interval=50 was removed here # Save as GIF (local or Colab-friendly path) ani.save(\"earth_orbit_simulation.gif\", writer='pillow', fps=30)","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius-theoretical-foundation","text":"","title":"Orbital Period and Orbital Radius \u2014 Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#newtonian-derivation-of-keplers-third-law","text":"To derive Kepler\u2019s Third Law for circular orbits, we begin by equating the gravitational force providing the centripetal force required for circular motion.","title":"Newtonian Derivation of Kepler\u2019s Third Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#gravitational-force","text":"\\[ F_g = \\frac{G M m}{r^2} \\] Where: - \\( G \\) is the universal gravitational constant - \\( M \\) is the mass of the central body (e.g., a star or planet) - \\( m \\) is the mass of the orbiting object - \\( r \\) is the orbital radius","title":"Gravitational Force:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#centripetal-force","text":"\\[ F_c = \\frac{m v^2}{r} \\] For a stable circular orbit, these forces must be equal: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] Cancelling \\( m \\) and rearranging: \\[ v^2 = \\frac{G M}{r} \\]","title":"Centripetal Force:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period","text":"The orbital period \\( T \\) is the time to complete one full revolution. Since the circumference of the orbit is \\( 2\\pi r \\) : \\[ T = \\frac{2\\pi r}{v} \\] Substitute for \\( v \\) : \\[ T = \\frac{2\\pi r}{\\sqrt{\\frac{G M}{r}}} = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\]","title":"Orbital Period:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#final-form-of-keplers-third-law","text":"\\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This demonstrates the proportionality: \\[ T^2 \\propto r^3 \\]","title":"Final Form of Kepler\u2019s Third Law:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#assumptions-in-this-derivation","text":"The orbit is perfectly circular. The orbiting body's mass \\( m \\) is negligible compared to \\( M \\) . The system is isolated (no perturbations from other bodies). General Relativity effects are ignored (Newtonian approximation).","title":"Assumptions in This Derivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#interpretation","text":"For all satellites orbiting the same central mass \\( M \\) , the ratio \\( \\frac{T^2}{r^3} \\) is constant. This law allows astronomers to compare orbital periods and radii without knowing \\( M \\) directly, or to infer \\( M \\) when \\( T \\) and \\( r \\) are known.","title":"Interpretation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius-astrophysical-implications","text":"","title":"Orbital Period and Orbital Radius \u2014 Astrophysical Implications"},{"location":"1%20Physics/2%20Gravity/Problem_1/#keplers-third-law-in-astronomy","text":"Kepler\u2019s Third Law: \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This fundamental relationship has wide-ranging implications in astronomy and astrophysics.","title":"Kepler\u2019s Third Law in Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-determining-masses-of-celestial-bodies","text":"Rearranging Kepler's Law to solve for \\( M \\) : \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] Where: - \\( M \\) is the mass of the central object - \\( r \\) is the orbital radius - \\( T \\) is the orbital period - \\( G \\) is the gravitational constant","title":"1. Determining Masses of Celestial Bodies"},{"location":"1%20Physics/2%20Gravity/Problem_1/#application","text":"By measuring \\( T \\) and \\( r \\) , astronomers can calculate the mass of: Planets (from their moons' orbits) Stars (from exoplanets\u2019 orbits) Galaxies (using orbital motion of stars or gas clouds)","title":"Application:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-determining-orbital-distances","text":"If the central mass \\( M \\) is known (e.g., mass of the Sun), Kepler\u2019s Law can be used to calculate the orbital radius \\( r \\) for satellites or planets: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] Useful for: - Predicting satellite altitudes - Estimating distances of exoplanets from their host stars","title":"2. Determining Orbital Distances"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-validating-observational-data","text":"By comparing observed values of \\( T \\) and \\( r \\) with theoretical predictions, scientists can: - Confirm the validity of Newtonian mechanics - Detect anomalies (e.g., additional massive bodies, non-gravitational forces)","title":"3. Validating Observational Data"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-inferring-existence-of-hidden-objects","text":"If observed \\( T \\) and \\( r \\) values deviate from expectations: - May suggest presence of dark matter - Or reveal gravitational influence of unseen exoplanets or black holes","title":"4. Inferring Existence of Hidden Objects"},{"location":"1%20Physics/2%20Gravity/Problem_1/#5-limitations-and-generalizations","text":"The law applies strictly to two-body circular orbits . Elliptical orbits require a more general form using the semi-major axis \\( a \\) : $$ T^2 = \\frac{4\\pi^2}{G M} a^3 $$ For very massive systems or high velocities, General Relativity corrections may be necessary.","title":"5. Limitations and Generalizations"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius-real-world-examples","text":"Kepler's Third Law can be directly applied to various real-world systems, from the Earth's Moon to planets in the Solar System.","title":"Orbital Period and Orbital Radius \u2014 Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-the-moon-orbiting-earth","text":"Let\u2019s analyze the Moon\u2019s orbit as a test of Kepler's Third Law.","title":"1. The Moon Orbiting Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#known-values","text":"Orbital radius: $$ r_{\\text{Moon}} \\approx 3.84 \\times 10^8 \\, \\text{m} $$ Orbital period: $$ T_{\\text{Moon}} \\approx 27.32 \\, \\text{days} = 2.36 \\times 10^6 \\, \\text{seconds} $$ Gravitational constant: $$ G = 6.67430 \\times 10^{-11} \\, \\text{m}^3\\,\\text{kg}^{-1}\\,\\text{s}^{-2} $$ Mass of Earth: $$ M_{\\text{Earth}} \\approx 5.972 \\times 10^{24} \\, \\text{kg} $$","title":"Known values:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#theoretical-prediction","text":"Using: \\[ T = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\] Plugging in the values: \\[ T_{\\text{calc}} = 2\\pi \\sqrt{\\frac{(3.84 \\times 10^8)^3}{6.67430 \\times 10^{-11} \\times 5.972 \\times 10^{24}}} \\approx 2.36 \\times 10^6 \\, \\text{seconds} \\] \u2705 Matches observed period \u2014 confirms accuracy of Kepler's Law.","title":"Theoretical Prediction:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-planetary-orbits-in-the-solar-system","text":"Let\u2019s examine the relation between \\( T^2 \\) and \\( r^3 \\) for several planets. Planet Orbital Radius \\( r \\) (AU) Orbital Period \\( T \\) (years) \\( T^2 \\) \\( r^3 \\) Mercury 0.39 0.24 0.058 0.059 Venus 0.72 0.62 0.384 0.373 Earth 1.00 1.00 1.000 1.000 Mars 1.52 1.88 3.534 3.512 Jupiter 5.20 11.86 140.7 140.6 Saturn 9.58 29.46 867.6 880.0 Here, units are in Astronomical Units (AU) and years , making \\( G M = 4\\pi^2 \\) in these units. \u2705 The values of \\( T^2 \\) and \\( r^3 \\) are nearly equal, confirming: \\[ T^2 \\approx r^3 \\]","title":"2. Planetary Orbits in the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-graphical-validation","text":"Plotting \\( T^2 \\) vs \\( r^3 \\) for planetary data gives a linear graph with slope \u2248 1, as expected.","title":"3. Graphical Validation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#logarithmic-version","text":"Taking log of both sides: \\[ \\log T = \\frac{3}{2} \\log r + \\text{const} \\] This implies that a log-log plot of \\( T \\) vs \\( r \\) will be a straight line with slope 1.5.","title":"Logarithmic Version:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-applications-beyond-the-solar-system","text":"Used to determine distances of exoplanets from host stars (via transit or radial velocity methods). Used to estimate the mass of binary star systems or even black holes in binary orbits.","title":"4. Applications Beyond the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#summary","text":"Real-world data strongly supports Kepler's Third Law in both our Solar System and beyond. Small deviations can often point to exciting new physics or unseen objects.","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_1/#5-computational-modeling","text":"In this section, we simulate circular orbital motion using Newtonian mechanics to explore and validate Kepler\u2019s Third Law: $$ T^2 \\propto r^3 $$ We define clear assumptions, simulate orbital systems, vary key parameters, and visualize the relationship between orbital period and radius.","title":"5. Computational Modeling"},{"location":"1%20Physics/2%20Gravity/Problem_1/#51-assumptions-and-setup","text":"We assume: - A two-body system (massive central body, orbiting satellite) - Perfectly circular orbits - Newtonian gravity is valid - No relativistic effects or perturbations import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 # gravitational constant (m^3 kg^-1 s^-2) # Orbital period calculator for circular orbit def orbital_period(r, M): return 2 * np.pi * np.sqrt(r**3 / (G * M))","title":"5.1 Assumptions and Setup"},{"location":"1%20Physics/2%20Gravity/Problem_1/#52-plot-t2-vs-r3-for-fixed-central-mass-earth","text":"Here, we simulate a range of orbital radii around Earth and calculate the corresponding orbital periods. # Central mass: Earth M_earth = 5.972e24 # kg # Orbital radii (from 7000 km to 50,000 km) radii = np.linspace(7e6, 5e7, 100) T = orbital_period(radii, M_earth) # Calculate T\u00b2 and r\u00b3 T_squared = T**2 r_cubed = radii**3 # Plot T\u00b2 vs r\u00b3 plt.figure() plt.plot(r_cubed, T_squared, 'o', markersize=4) plt.xlabel('$r^3$ (m\u00b3)') plt.ylabel('$T^2$ (s\u00b2)') plt.title('Kepler\u2019s Law Simulation: $T^2$ vs $r^3$ (Fixed Earth Mass)') plt.grid(True) plt.show()","title":"5.2 Plot: \\(T^2\\) vs \\(r^3\\) for Fixed Central Mass (Earth)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#53-plot-t2-vs-r3-for-varying-central-masses","text":"Now we compare how different central masses affect the slope of the \\(T^2\\) vs \\(r^3\\) relation. masses = [5.972e24, 1.989e30] # Earth, Sun labels = ['Earth Mass', 'Sun Mass'] plt.figure() for M, label in zip(masses, labels): T = orbital_period(radii, M) T_squared = T**2 r_cubed = radii**3 plt.plot(r_cubed, T_squared, label=label) plt.xlabel('$r^3$ (m\u00b3)') plt.ylabel('$T^2$ (s\u00b2)') plt.title('Effect of Central Mass on $T^2$ vs $r^3$') plt.legend() plt.grid(True) plt.show()","title":"5.3 Plot: \\(T^2\\) vs \\(r^3\\) for Varying Central Masses"},{"location":"1%20Physics/2%20Gravity/Problem_1/#54-plot-linearity-check-with-linear-fit","text":"We verify that the relationship between \\(T^2\\) and \\(r^3\\) is linear by fitting a straight line to the data. # Use Earth mass for this check T = orbital_period(radii, M_earth) T_squared = T**2 r_cubed = radii**3 # Linear regression slope, intercept = np.polyfit(r_cubed, T_squared, 1) # Print slope and theoretical value theory_slope = 4 * np.pi**2 / (G * M_earth) print(f\"Simulated Slope: {slope:.3e} s\u00b2/m\u00b3\") print(f\"Theoretical Slope: {theory_slope:.3e} s\u00b2/m\u00b3\") # Plot with fitted line plt.figure() plt.plot(r_cubed, T_squared, 'o', label='Simulated Data') plt.plot(r_cubed, slope * r_cubed + intercept, 'r--', label='Linear Fit') plt.xlabel('$r^3$ (m\u00b3)') plt.ylabel('$T^2$ (s\u00b2)') plt.title('Linearity Verification: $T^2$ vs $r^3$ with Fit') plt.legend() plt.grid(True) plt.show()","title":"5.4 Plot: Linearity Check with Linear Fit"},{"location":"1%20Physics/2%20Gravity/Problem_1/#_1","text":"","title":""},{"location":"1%20Physics/2%20Gravity/Problem_1/#54-simulated-orbit-animation-earth-orbiting-the-sun","text":"import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation # Constants G = 6.67430e-11 # m^3 kg^-1 s^-2 M_sun = 1.989e30 # kg AU = 1.496e11 # meters T_earth = 365.25 * 24 * 3600 # seconds # Simulation time steps num_frames = 200 times = np.linspace(0, T_earth, num_frames) # Circular orbit position r = AU omega = 2 * np.pi / T_earth x = r * np.cos(omega * times) y = r * np.sin(omega * times) # Set up figure fig, ax = plt.subplots(figsize=(6, 6)) ax.set_xlim(-1.2 * AU, 1.2 * AU) ax.set_ylim(-1.2 * AU, 1.2 * AU) ax.set_aspect('equal') ax.set_title(\"Simulated Orbit: Earth Around the Sun\") ax.set_xlabel(\"X Position (m)\") ax.set_ylabel(\"Y Position (m)\") # Plot objects sun, = ax.plot(0, 0, 'yo', markersize=12, label='Sun') earth, = ax.plot([], [], 'bo', markersize=6, label='Earth') trail, = ax.plot([], [], 'b--', linewidth=0.5) # Initialization function def init(): earth.set_data([], []) trail.set_data([], []) return earth, trail # Update function def update(frame): # Corrected: Pass x[frame] and y[frame] as lists earth.set_data([x[frame]], [y[frame]]) # Trail should receive sequences (arrays) for multiple points trail.set_data(x[:frame+1], y[:frame+1]) return earth, trail # Create animation # Removed interval=50 as it was not in the original code causing the error ani = animation.FuncAnimation(fig, update, frames=num_frames, init_func=init, blit=True) # interval=50 was removed here # Save as GIF (local or Colab-friendly path) ani.save(\"earth_orbit_simulation.gif\", writer='pillow', fps=30)","title":"5.4 Simulated Orbit Animation: Earth Orbiting the Sun"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2 Escape Velocities and Cosmic Velocities 1. Definitions 1.1 First Cosmic Velocity \u2013 Orbital Velocity The first cosmic velocity is the minimum horizontal speed an object must have to maintain a stable circular orbit just above the surface of a celestial body, assuming no atmospheric drag. Physically, it is derived from equating the gravitational force with the centripetal force required for circular motion. \\[ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} \\] Solving for \\(v_1\\) (first cosmic velocity): \\[ v_1 = \\sqrt{\\frac{G M}{r}} \\] \\(G\\) = gravitational constant ( \\(6.674 \\times 10^{-11} \\ \\mathrm{m^3\\,kg^{-1}\\,s^{-2}}\\) ) \\(M\\) = mass of the central body \\(r\\) = radius from the center of mass to the orbiting object 1.2 Second Cosmic Velocity \u2013 Escape Velocity The second cosmic velocity is the minimum speed needed for an object to completely escape the gravitational field of a celestial body, assuming no additional propulsion after launch and neglecting air resistance. It is derived from conservation of energy , setting total mechanical energy to zero: \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\] Solving for \\(v_2\\) (escape velocity): \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] This velocity is greater than the first cosmic velocity by a factor of \\(\\sqrt{2}\\) . 1.3 Third Cosmic Velocity \u2013 Interstellar/Heliocentric Escape Velocity The third cosmic velocity is the minimum speed required for a spacecraft to escape the gravitational influence of the Sun , starting from the Earth\u2019s orbit (or from any planetary orbit), allowing it to leave the solar system . This is a more complex computation because it involves: - The gravitational potential of the Sun - The orbital velocity of Earth (or the departure planet) Assuming a spacecraft is already in orbit around the Sun at Earth's distance \\(r_{\\oplus}\\) and needs to escape the Sun\u2019s gravity, we apply energy conservation: \\[ \\frac{1}{2} m v_3^2 - \\frac{G M_{\\odot} m}{r_{\\oplus}} = 0 \\] Solving for \\(v_3\\) : \\[ v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\oplus}}} \\] However, since the Earth is already moving at its orbital speed around the Sun \\(v_{\\oplus}\\) , the required excess velocity \\(\\Delta v\\) from Earth\u2019s frame is: \\[ \\Delta v = v_3 - v_{\\oplus} \\] \\(M_{\\odot}\\) = mass of the Sun \\(r_{\\oplus}\\) = average orbital radius of Earth \\(v_{\\oplus} \\approx 29.78 \\ \\mathrm{km/s}\\) 1.4 Physical Meaning and Implications First Cosmic Velocity ( \\(v_1\\) ) : Enables low Earth orbit (LEO) satellites. Any lower and the object would fall back to Earth; any higher would transition into an elliptical orbit. Second Cosmic Velocity ( \\(v_2\\) ) : Necessary to reach interplanetary space . Without this velocity, objects eventually fall back due to gravity. Used for Moon missions and planetary flybys . Third Cosmic Velocity ( \\(v_3\\) ) : Used in interstellar missions , such as Voyager 1 and 2 . Reaching this velocity means an object is no longer gravitationally bound to the solar system. Each of these thresholds represents a fundamental barrier in celestial mechanics, governed by Newtonian gravity, and is pivotal in designing missions and understanding orbital dynamics. 2. Mathematical Derivations This section provides rigorous derivations for the first, second, and third cosmic velocities based on Newtonian mechanics, along with the identification of key physical parameters involved. 2.1 First Cosmic Velocity \u2013 Derivation via Circular Orbit Dynamics The first cosmic velocity , \\(v_1\\) , is the speed required for an object to stay in a stable circular orbit around a celestial body near its surface. Assumptions Object is just above the planet\u2019s surface. Only gravity provides the required centripetal force. Step-by-step Derivation Gravitational force acting on mass \\(m\\) : \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] Centripetal force required to keep the object in circular motion: \\[ F_{\\text{centripetal}} = \\frac{m v^2}{r} \\] Equating both forces: \\[ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} \\] Simplifying and solving for \\(v_1\\) : \\[ v_1 = \\sqrt{\\frac{G M}{r}} \\] 2.2 Second Cosmic Velocity \u2013 Derivation via Energy Conservation The second cosmic velocity , \\(v_2\\) , is the speed an object must have to escape the gravitational pull of a body without further propulsion. Assumptions Neglect atmospheric drag. No propulsion after initial launch. Final total mechanical energy is zero (at infinite distance). Total mechanical energy (initial state): \\[ E_{\\text{initial}} = \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} \\] Total mechanical energy (final state at \\(r \\to \\infty\\) ): \\[ E_{\\text{final}} = 0 \\] Applying conservation of energy: \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\] Solving for \\(v_2\\) : \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] This confirms that escape velocity is \\(\\sqrt{2}\\) times the orbital velocity. 2.3 Third Cosmic Velocity \u2013 Derivation for Heliocentric Escape The third cosmic velocity , \\(v_3\\) , is the speed required to escape the gravitational influence of the Sun , starting from a planetary orbit (usually Earth). Assumptions Object starts from a circular heliocentric orbit (e.g., Earth's orbit). Sun's gravity dominates. Object escapes Sun\u2019s field with zero final energy. Total mechanical energy: \\[ E = \\frac{1}{2} m v^2 - \\frac{G M_{\\odot} m}{r_{\\oplus}} \\] For escape: \\[ E_{\\text{total}} = 0 \\] Solving for required solar escape velocity: \\[ v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\oplus}}} \\] But Earth is already moving at orbital velocity \\(v_{\\oplus}\\) : \\[ v_{\\oplus} = \\sqrt{\\frac{G M_{\\odot}}{r_{\\oplus}}} \\] Thus, the required excess velocity (\u0394v) from a spacecraft launched from Earth is: \\[ \\Delta v = v_3 - v_{\\oplus} = \\sqrt{2} \\cdot v_{\\oplus} - v_{\\oplus} = (\\sqrt{2} - 1) v_{\\oplus} \\] So: \\[ \\Delta v \\approx 0.4142 \\cdot v_{\\oplus} \\approx 12.35 \\ \\mathrm{km/s} \\] 2.4 Key Physical Parameters Parameter Symbol Description Gravitational constant \\(G\\) \\(6.674 \\times 10^{-11} \\ \\mathrm{m^3 \\, kg^{-1} \\, s^{-2}}\\) Mass of central body \\(M\\) e.g., \\(M_{\\text{Earth}} \\approx 5.972 \\times 10^{24} \\ \\mathrm{kg}\\) Radius of central body \\(r\\) Distance from center of mass (e.g., Earth: \\(6.371 \\times 10^6\\) m) Solar mass \\(M_{\\odot}\\) \\(1.989 \\times 10^{30} \\ \\mathrm{kg}\\) Earth-Sun distance \\(r_{\\oplus}\\) \\(1.496 \\times 10^{11} \\ \\mathrm{m}\\) Orbital velocity of Earth \\(v_{\\oplus}\\) \\(\\approx 29.78 \\ \\mathrm{km/s}\\) 2.5 Summary of Formulae First Cosmic Velocity: $$ v_1 = \\sqrt{\\frac{G M}{r}} $$ Second Cosmic Velocity: $$ v_2 = \\sqrt{2} \\cdot v_1 = \\sqrt{\\frac{2 G M}{r}} $$ Third Cosmic Velocity (from Earth's orbit): $$ v_3 = \\sqrt{2} \\cdot v_{\\oplus} $$ \u0394v from Earth\u2019s frame: $$ \\Delta v = (\\sqrt{2} - 1) \\cdot v_{\\oplus} $$ 3. Calculations and Visualizations In this section, we compute and compare the first , second , and third cosmic velocities for Earth , Mars , and Jupiter using planetary data. We also visualize the effect of planetary mass and radius on these velocities. 3.1 Constants and Formulas Gravitational Constant: \\[ G = 6.674 \\times 10^{-11} \\ \\mathrm{m^3\\,kg^{-1}\\,s^{-2}} \\] Formulas Used: First Cosmic Velocity: $$ v_1 = \\sqrt{\\frac{G M}{r}} $$ Second Cosmic Velocity: $$ v_2 = \\sqrt{2} \\cdot v_1 = \\sqrt{\\frac{2 G M}{r}} $$ Third Cosmic Velocity (from Earth's orbit): $$ v_3 = \\sqrt{2} \\cdot v_{\\oplus} \\approx 42.1 \\ \\mathrm{km/s} $$ Note: \\(v_3\\) is calculated only for Earth, as it requires heliocentric orbital velocity. 3.2 Planetary Data Planet Mass \\(M\\) (kg) Radius \\(r\\) (m) Orbital Velocity \\(v_{\\text{orbit}}\\) (km/s) Earth \\(5.972 \\times 10^{24}\\) \\(6.371 \\times 10^6\\) 29.78 Mars \\(6.417 \\times 10^{23}\\) \\(3.3895 \\times 10^6\\) 24.07 Jupiter \\(1.898 \\times 10^{27}\\) \\(6.9911 \\times 10^7\\) 13.07 3.3 Computed Velocities Using the above formulas and data, we compute: Planet \\(v_1\\) (km/s) \\(v_2\\) (km/s) \\(v_3\\) (km/s) Earth 7.91 11.19 42.1 Mars 3.55 5.03 \u2014 Jupiter 42.11 59.54 \u2014 Note: \\(v_3\\) is listed only for Earth; values for Mars and Jupiter depend on solar distances and require heliocentric modeling. 3.4 Interpretation Jupiter has the highest \\(v_1\\) and \\(v_2\\) due to its large mass, despite a much larger radius. Mars has the lowest velocities, making it energetically easier for launches but harder for atmospheric entry. Earth\u2019s third cosmic velocity (~42.1 km/s) is the threshold for interstellar probes. 3.5 Visualization Ideas You can use the following plots to illustrate relationships: (1) Velocity vs. Planet Bar chart showing \\(v_1\\) and \\(v_2\\) for Earth, Mars, and Jupiter. Optional: Include \\(v_3\\) for Earth. (2) Effect of Mass and Radius Plot: \\[ v = \\sqrt{\\frac{G M}{r}} \\quad \\text{and} \\quad \\sqrt{\\frac{2 G M}{r}} \\] For a range of hypothetical planets: - Fix \\(r\\) , vary \\(M\\) - Fix \\(M\\) , vary \\(r\\) This will show: - Mass increases \u2192 higher velocity - Radius increases \u2192 lower velocity 3.6 Python Snippet for Plotting (Optional) import matplotlib.pyplot as plt planets = ['Earth', 'Mars', 'Jupiter'] v1 = [7.91, 3.55, 42.11] v2 = [11.19, 5.03, 59.54] plt.bar(planets, v1, label='First Cosmic Velocity (v1)', alpha=0.7) plt.bar(planets, v2, label='Second Cosmic Velocity (v2)', alpha=0.7, bottom=v1) plt.ylabel(\"Velocity (km/s)\") plt.title(\"Cosmic Velocities of Planets\") plt.legend() plt.grid(True) plt.show() 3.7 Summary Cosmic velocities are heavily influenced by both planetary mass and radius . Higher escape velocities demand more propulsion and fuel. Understanding these thresholds is fundamental to planning space missions and estimating launch costs. 4. Discussion of Importance This section explores the significance of each cosmic velocity threshold in real-world applications of spaceflight, mission design, and the future of space exploration. 4.1 Launching Satellites \u2013 First Cosmic Velocity Satellites in low Earth orbit (LEO) rely on first cosmic velocity to maintain stable orbits. Here's a plot of \\(v_1\\) for several celestial bodies to understand launch difficulty. import matplotlib.pyplot as plt planets = ['Moon', 'Earth', 'Mars', 'Jupiter'] v1 = [1.68, 7.91, 3.55, 42.11] # km/s plt.figure() plt.bar(planets, v1) plt.title(\"First Cosmic Velocity for Stable Orbits\") plt.ylabel(\"Velocity (km/s)\") plt.xlabel(\"Celestial Body\") plt.grid(axis='y') plt.show() Interpretation: Lower \\(v_1\\) (e.g., Moon, Mars) : Easier to launch and orbit, but less gravity to hold atmospheres. Higher \\(v_1\\) (e.g., Jupiter) : Extremely high propulsion needs. 4.2 Interplanetary Missions \u2013 Second Cosmic Velocity To send spacecraft beyond Earth, they must reach escape velocity . v2 = [2.38, 11.19, 5.03, 59.54] # km/s plt.figure() plt.bar(planets, v2, color='orange') plt.title(\"Second Cosmic Velocity \u2013 Escape from Gravity\") plt.ylabel(\"Velocity (km/s)\") plt.xlabel(\"Celestial Body\") plt.grid(axis='y') plt.show() Implications: Earth to Mars missions must exceed 11.2 km/s. Planning launches from smaller bodies can reduce energy cost (e.g., launch return missions from Mars or Moon). 4.3 Leaving the Solar System \u2013 Third Cosmic Velocity To go beyond the Sun's gravitational field, spacecraft must reach the third cosmic velocity relative to the Sun. v_earth_orbit = 29.78 # km/s v3 = (2 ** 0.5) * v_earth_orbit # approx. 42.1 km/s delta_v = v3 - v_earth_orbit plt.figure() plt.bar(['Earth Orbital Speed', 'Third Cosmic Velocity'], [v_earth_orbit, v3], color=['skyblue', 'red']) plt.title(\"Solar System Escape: Earth's Required Velocities\") plt.ylabel(\"Velocity (km/s)\") plt.grid(axis='y') plt.show() Context: Voyager 1 reached this speed using gravity assists. Exceeding this velocity is necessary for interstellar missions . 4.4 Rocket Fuel and Energy Implications Rocket equation shows fuel cost rises exponentially with required \\(\\Delta v\\) . import numpy as np delta_v = np.linspace(0, 60, 300) # km/s Isp = 450 # effective specific impulse in seconds (modern cryogenic engine) g0 = 9.81 # m/s\u00b2 mass_ratio = np.exp((delta_v * 1000) / (Isp * g0)) # m0/mf plt.figure() plt.plot(delta_v, mass_ratio) plt.title(\"Mass Ratio vs \u0394v (Rocket Equation)\") plt.xlabel(\"\u0394v (km/s)\") plt.ylabel(\"Mass Ratio (m\u2080/mf)\") plt.yscale('log') plt.grid(True) plt.show() Takeaway: Small increases in required speed demand huge increases in fuel mass . Efficient mission design minimizes required \\(\\Delta v\\) (e.g., using gravity assists, low-energy transfers). 4.5 Mission Planning and Colonization Potential Understanding cosmic velocities helps identify feasible launch sites for future missions or colonization. Site Launch Cost Benefit Strategic Value Moon Very low gravity Fuel-efficient launch point Mars Lower escape speed Easier surface return missions Earth Orbit Already in motion Staging ground for interplanetary travel Long-term colonization may favor low-gravity environments for energy savings, though human habitability and resources remain limiting factors.","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#escape-velocities-and-cosmic-velocities","text":"","title":"Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#1-definitions","text":"","title":"1. Definitions"},{"location":"1%20Physics/2%20Gravity/Problem_2/#11-first-cosmic-velocity-orbital-velocity","text":"The first cosmic velocity is the minimum horizontal speed an object must have to maintain a stable circular orbit just above the surface of a celestial body, assuming no atmospheric drag. Physically, it is derived from equating the gravitational force with the centripetal force required for circular motion. \\[ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} \\] Solving for \\(v_1\\) (first cosmic velocity): \\[ v_1 = \\sqrt{\\frac{G M}{r}} \\] \\(G\\) = gravitational constant ( \\(6.674 \\times 10^{-11} \\ \\mathrm{m^3\\,kg^{-1}\\,s^{-2}}\\) ) \\(M\\) = mass of the central body \\(r\\) = radius from the center of mass to the orbiting object","title":"1.1 First Cosmic Velocity \u2013 Orbital Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#12-second-cosmic-velocity-escape-velocity","text":"The second cosmic velocity is the minimum speed needed for an object to completely escape the gravitational field of a celestial body, assuming no additional propulsion after launch and neglecting air resistance. It is derived from conservation of energy , setting total mechanical energy to zero: \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\] Solving for \\(v_2\\) (escape velocity): \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] This velocity is greater than the first cosmic velocity by a factor of \\(\\sqrt{2}\\) .","title":"1.2 Second Cosmic Velocity \u2013 Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#13-third-cosmic-velocity-interstellarheliocentric-escape-velocity","text":"The third cosmic velocity is the minimum speed required for a spacecraft to escape the gravitational influence of the Sun , starting from the Earth\u2019s orbit (or from any planetary orbit), allowing it to leave the solar system . This is a more complex computation because it involves: - The gravitational potential of the Sun - The orbital velocity of Earth (or the departure planet) Assuming a spacecraft is already in orbit around the Sun at Earth's distance \\(r_{\\oplus}\\) and needs to escape the Sun\u2019s gravity, we apply energy conservation: \\[ \\frac{1}{2} m v_3^2 - \\frac{G M_{\\odot} m}{r_{\\oplus}} = 0 \\] Solving for \\(v_3\\) : \\[ v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\oplus}}} \\] However, since the Earth is already moving at its orbital speed around the Sun \\(v_{\\oplus}\\) , the required excess velocity \\(\\Delta v\\) from Earth\u2019s frame is: \\[ \\Delta v = v_3 - v_{\\oplus} \\] \\(M_{\\odot}\\) = mass of the Sun \\(r_{\\oplus}\\) = average orbital radius of Earth \\(v_{\\oplus} \\approx 29.78 \\ \\mathrm{km/s}\\)","title":"1.3 Third Cosmic Velocity \u2013 Interstellar/Heliocentric Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#14-physical-meaning-and-implications","text":"First Cosmic Velocity ( \\(v_1\\) ) : Enables low Earth orbit (LEO) satellites. Any lower and the object would fall back to Earth; any higher would transition into an elliptical orbit. Second Cosmic Velocity ( \\(v_2\\) ) : Necessary to reach interplanetary space . Without this velocity, objects eventually fall back due to gravity. Used for Moon missions and planetary flybys . Third Cosmic Velocity ( \\(v_3\\) ) : Used in interstellar missions , such as Voyager 1 and 2 . Reaching this velocity means an object is no longer gravitationally bound to the solar system. Each of these thresholds represents a fundamental barrier in celestial mechanics, governed by Newtonian gravity, and is pivotal in designing missions and understanding orbital dynamics.","title":"1.4 Physical Meaning and Implications"},{"location":"1%20Physics/2%20Gravity/Problem_2/#2-mathematical-derivations","text":"This section provides rigorous derivations for the first, second, and third cosmic velocities based on Newtonian mechanics, along with the identification of key physical parameters involved.","title":"2. Mathematical Derivations"},{"location":"1%20Physics/2%20Gravity/Problem_2/#21-first-cosmic-velocity-derivation-via-circular-orbit-dynamics","text":"The first cosmic velocity , \\(v_1\\) , is the speed required for an object to stay in a stable circular orbit around a celestial body near its surface.","title":"2.1 First Cosmic Velocity \u2013 Derivation via Circular Orbit Dynamics"},{"location":"1%20Physics/2%20Gravity/Problem_2/#assumptions","text":"Object is just above the planet\u2019s surface. Only gravity provides the required centripetal force.","title":"Assumptions"},{"location":"1%20Physics/2%20Gravity/Problem_2/#step-by-step-derivation","text":"Gravitational force acting on mass \\(m\\) : \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] Centripetal force required to keep the object in circular motion: \\[ F_{\\text{centripetal}} = \\frac{m v^2}{r} \\] Equating both forces: \\[ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} \\] Simplifying and solving for \\(v_1\\) : \\[ v_1 = \\sqrt{\\frac{G M}{r}} \\]","title":"Step-by-step Derivation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#22-second-cosmic-velocity-derivation-via-energy-conservation","text":"The second cosmic velocity , \\(v_2\\) , is the speed an object must have to escape the gravitational pull of a body without further propulsion.","title":"2.2 Second Cosmic Velocity \u2013 Derivation via Energy Conservation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#assumptions_1","text":"Neglect atmospheric drag. No propulsion after initial launch. Final total mechanical energy is zero (at infinite distance).","title":"Assumptions"},{"location":"1%20Physics/2%20Gravity/Problem_2/#total-mechanical-energy-initial-state","text":"\\[ E_{\\text{initial}} = \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} \\]","title":"Total mechanical energy (initial state):"},{"location":"1%20Physics/2%20Gravity/Problem_2/#total-mechanical-energy-final-state-at-r-to-infty","text":"\\[ E_{\\text{final}} = 0 \\]","title":"Total mechanical energy (final state at \\(r \\to \\infty\\)):"},{"location":"1%20Physics/2%20Gravity/Problem_2/#applying-conservation-of-energy","text":"\\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\] Solving for \\(v_2\\) : \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] This confirms that escape velocity is \\(\\sqrt{2}\\) times the orbital velocity.","title":"Applying conservation of energy:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#23-third-cosmic-velocity-derivation-for-heliocentric-escape","text":"The third cosmic velocity , \\(v_3\\) , is the speed required to escape the gravitational influence of the Sun , starting from a planetary orbit (usually Earth).","title":"2.3 Third Cosmic Velocity \u2013 Derivation for Heliocentric Escape"},{"location":"1%20Physics/2%20Gravity/Problem_2/#assumptions_2","text":"Object starts from a circular heliocentric orbit (e.g., Earth's orbit). Sun's gravity dominates. Object escapes Sun\u2019s field with zero final energy.","title":"Assumptions"},{"location":"1%20Physics/2%20Gravity/Problem_2/#total-mechanical-energy","text":"\\[ E = \\frac{1}{2} m v^2 - \\frac{G M_{\\odot} m}{r_{\\oplus}} \\] For escape: \\[ E_{\\text{total}} = 0 \\] Solving for required solar escape velocity: \\[ v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\oplus}}} \\] But Earth is already moving at orbital velocity \\(v_{\\oplus}\\) : \\[ v_{\\oplus} = \\sqrt{\\frac{G M_{\\odot}}{r_{\\oplus}}} \\] Thus, the required excess velocity (\u0394v) from a spacecraft launched from Earth is: \\[ \\Delta v = v_3 - v_{\\oplus} = \\sqrt{2} \\cdot v_{\\oplus} - v_{\\oplus} = (\\sqrt{2} - 1) v_{\\oplus} \\] So: \\[ \\Delta v \\approx 0.4142 \\cdot v_{\\oplus} \\approx 12.35 \\ \\mathrm{km/s} \\]","title":"Total mechanical energy:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#24-key-physical-parameters","text":"Parameter Symbol Description Gravitational constant \\(G\\) \\(6.674 \\times 10^{-11} \\ \\mathrm{m^3 \\, kg^{-1} \\, s^{-2}}\\) Mass of central body \\(M\\) e.g., \\(M_{\\text{Earth}} \\approx 5.972 \\times 10^{24} \\ \\mathrm{kg}\\) Radius of central body \\(r\\) Distance from center of mass (e.g., Earth: \\(6.371 \\times 10^6\\) m) Solar mass \\(M_{\\odot}\\) \\(1.989 \\times 10^{30} \\ \\mathrm{kg}\\) Earth-Sun distance \\(r_{\\oplus}\\) \\(1.496 \\times 10^{11} \\ \\mathrm{m}\\) Orbital velocity of Earth \\(v_{\\oplus}\\) \\(\\approx 29.78 \\ \\mathrm{km/s}\\)","title":"2.4 Key Physical Parameters"},{"location":"1%20Physics/2%20Gravity/Problem_2/#25-summary-of-formulae","text":"First Cosmic Velocity: $$ v_1 = \\sqrt{\\frac{G M}{r}} $$ Second Cosmic Velocity: $$ v_2 = \\sqrt{2} \\cdot v_1 = \\sqrt{\\frac{2 G M}{r}} $$ Third Cosmic Velocity (from Earth's orbit): $$ v_3 = \\sqrt{2} \\cdot v_{\\oplus} $$ \u0394v from Earth\u2019s frame: $$ \\Delta v = (\\sqrt{2} - 1) \\cdot v_{\\oplus} $$","title":"2.5 Summary of Formulae"},{"location":"1%20Physics/2%20Gravity/Problem_2/#3-calculations-and-visualizations","text":"In this section, we compute and compare the first , second , and third cosmic velocities for Earth , Mars , and Jupiter using planetary data. We also visualize the effect of planetary mass and radius on these velocities.","title":"3. Calculations and Visualizations"},{"location":"1%20Physics/2%20Gravity/Problem_2/#31-constants-and-formulas","text":"Gravitational Constant: \\[ G = 6.674 \\times 10^{-11} \\ \\mathrm{m^3\\,kg^{-1}\\,s^{-2}} \\] Formulas Used: First Cosmic Velocity: $$ v_1 = \\sqrt{\\frac{G M}{r}} $$ Second Cosmic Velocity: $$ v_2 = \\sqrt{2} \\cdot v_1 = \\sqrt{\\frac{2 G M}{r}} $$ Third Cosmic Velocity (from Earth's orbit): $$ v_3 = \\sqrt{2} \\cdot v_{\\oplus} \\approx 42.1 \\ \\mathrm{km/s} $$ Note: \\(v_3\\) is calculated only for Earth, as it requires heliocentric orbital velocity.","title":"3.1 Constants and Formulas"},{"location":"1%20Physics/2%20Gravity/Problem_2/#32-planetary-data","text":"Planet Mass \\(M\\) (kg) Radius \\(r\\) (m) Orbital Velocity \\(v_{\\text{orbit}}\\) (km/s) Earth \\(5.972 \\times 10^{24}\\) \\(6.371 \\times 10^6\\) 29.78 Mars \\(6.417 \\times 10^{23}\\) \\(3.3895 \\times 10^6\\) 24.07 Jupiter \\(1.898 \\times 10^{27}\\) \\(6.9911 \\times 10^7\\) 13.07","title":"3.2 Planetary Data"},{"location":"1%20Physics/2%20Gravity/Problem_2/#33-computed-velocities","text":"Using the above formulas and data, we compute: Planet \\(v_1\\) (km/s) \\(v_2\\) (km/s) \\(v_3\\) (km/s) Earth 7.91 11.19 42.1 Mars 3.55 5.03 \u2014 Jupiter 42.11 59.54 \u2014 Note: \\(v_3\\) is listed only for Earth; values for Mars and Jupiter depend on solar distances and require heliocentric modeling.","title":"3.3 Computed Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#34-interpretation","text":"Jupiter has the highest \\(v_1\\) and \\(v_2\\) due to its large mass, despite a much larger radius. Mars has the lowest velocities, making it energetically easier for launches but harder for atmospheric entry. Earth\u2019s third cosmic velocity (~42.1 km/s) is the threshold for interstellar probes.","title":"3.4 Interpretation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#35-visualization-ideas","text":"You can use the following plots to illustrate relationships:","title":"3.5 Visualization Ideas"},{"location":"1%20Physics/2%20Gravity/Problem_2/#1-velocity-vs-planet","text":"Bar chart showing \\(v_1\\) and \\(v_2\\) for Earth, Mars, and Jupiter. Optional: Include \\(v_3\\) for Earth.","title":"(1) Velocity vs. Planet"},{"location":"1%20Physics/2%20Gravity/Problem_2/#2-effect-of-mass-and-radius","text":"Plot: \\[ v = \\sqrt{\\frac{G M}{r}} \\quad \\text{and} \\quad \\sqrt{\\frac{2 G M}{r}} \\] For a range of hypothetical planets: - Fix \\(r\\) , vary \\(M\\) - Fix \\(M\\) , vary \\(r\\) This will show: - Mass increases \u2192 higher velocity - Radius increases \u2192 lower velocity","title":"(2) Effect of Mass and Radius"},{"location":"1%20Physics/2%20Gravity/Problem_2/#36-python-snippet-for-plotting-optional","text":"import matplotlib.pyplot as plt planets = ['Earth', 'Mars', 'Jupiter'] v1 = [7.91, 3.55, 42.11] v2 = [11.19, 5.03, 59.54] plt.bar(planets, v1, label='First Cosmic Velocity (v1)', alpha=0.7) plt.bar(planets, v2, label='Second Cosmic Velocity (v2)', alpha=0.7, bottom=v1) plt.ylabel(\"Velocity (km/s)\") plt.title(\"Cosmic Velocities of Planets\") plt.legend() plt.grid(True) plt.show()","title":"3.6 Python Snippet for Plotting (Optional)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#37-summary","text":"Cosmic velocities are heavily influenced by both planetary mass and radius . Higher escape velocities demand more propulsion and fuel. Understanding these thresholds is fundamental to planning space missions and estimating launch costs.","title":"3.7 Summary"},{"location":"1%20Physics/2%20Gravity/Problem_2/#4-discussion-of-importance","text":"This section explores the significance of each cosmic velocity threshold in real-world applications of spaceflight, mission design, and the future of space exploration.","title":"4. Discussion of Importance"},{"location":"1%20Physics/2%20Gravity/Problem_2/#41-launching-satellites-first-cosmic-velocity","text":"Satellites in low Earth orbit (LEO) rely on first cosmic velocity to maintain stable orbits. Here's a plot of \\(v_1\\) for several celestial bodies to understand launch difficulty. import matplotlib.pyplot as plt planets = ['Moon', 'Earth', 'Mars', 'Jupiter'] v1 = [1.68, 7.91, 3.55, 42.11] # km/s plt.figure() plt.bar(planets, v1) plt.title(\"First Cosmic Velocity for Stable Orbits\") plt.ylabel(\"Velocity (km/s)\") plt.xlabel(\"Celestial Body\") plt.grid(axis='y') plt.show()","title":"4.1 Launching Satellites \u2013 First Cosmic Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#interpretation","text":"Lower \\(v_1\\) (e.g., Moon, Mars) : Easier to launch and orbit, but less gravity to hold atmospheres. Higher \\(v_1\\) (e.g., Jupiter) : Extremely high propulsion needs.","title":"Interpretation:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#42-interplanetary-missions-second-cosmic-velocity","text":"To send spacecraft beyond Earth, they must reach escape velocity . v2 = [2.38, 11.19, 5.03, 59.54] # km/s plt.figure() plt.bar(planets, v2, color='orange') plt.title(\"Second Cosmic Velocity \u2013 Escape from Gravity\") plt.ylabel(\"Velocity (km/s)\") plt.xlabel(\"Celestial Body\") plt.grid(axis='y') plt.show()","title":"4.2 Interplanetary Missions \u2013 Second Cosmic Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#implications","text":"Earth to Mars missions must exceed 11.2 km/s. Planning launches from smaller bodies can reduce energy cost (e.g., launch return missions from Mars or Moon).","title":"Implications:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#43-leaving-the-solar-system-third-cosmic-velocity","text":"To go beyond the Sun's gravitational field, spacecraft must reach the third cosmic velocity relative to the Sun. v_earth_orbit = 29.78 # km/s v3 = (2 ** 0.5) * v_earth_orbit # approx. 42.1 km/s delta_v = v3 - v_earth_orbit plt.figure() plt.bar(['Earth Orbital Speed', 'Third Cosmic Velocity'], [v_earth_orbit, v3], color=['skyblue', 'red']) plt.title(\"Solar System Escape: Earth's Required Velocities\") plt.ylabel(\"Velocity (km/s)\") plt.grid(axis='y') plt.show()","title":"4.3 Leaving the Solar System \u2013 Third Cosmic Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#context","text":"Voyager 1 reached this speed using gravity assists. Exceeding this velocity is necessary for interstellar missions .","title":"Context:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#44-rocket-fuel-and-energy-implications","text":"Rocket equation shows fuel cost rises exponentially with required \\(\\Delta v\\) . import numpy as np delta_v = np.linspace(0, 60, 300) # km/s Isp = 450 # effective specific impulse in seconds (modern cryogenic engine) g0 = 9.81 # m/s\u00b2 mass_ratio = np.exp((delta_v * 1000) / (Isp * g0)) # m0/mf plt.figure() plt.plot(delta_v, mass_ratio) plt.title(\"Mass Ratio vs \u0394v (Rocket Equation)\") plt.xlabel(\"\u0394v (km/s)\") plt.ylabel(\"Mass Ratio (m\u2080/mf)\") plt.yscale('log') plt.grid(True) plt.show()","title":"4.4 Rocket Fuel and Energy Implications"},{"location":"1%20Physics/2%20Gravity/Problem_2/#takeaway","text":"Small increases in required speed demand huge increases in fuel mass . Efficient mission design minimizes required \\(\\Delta v\\) (e.g., using gravity assists, low-energy transfers).","title":"Takeaway:"},{"location":"1%20Physics/2%20Gravity/Problem_2/#45-mission-planning-and-colonization-potential","text":"Understanding cosmic velocities helps identify feasible launch sites for future missions or colonization. Site Launch Cost Benefit Strategic Value Moon Very low gravity Fuel-efficient launch point Mars Lower escape speed Easier surface return missions Earth Orbit Already in motion Staging ground for interplanetary travel Long-term colonization may favor low-gravity environments for energy savings, though human habitability and resources remain limiting factors.","title":"4.5 Mission Planning and Colonization Potential"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}